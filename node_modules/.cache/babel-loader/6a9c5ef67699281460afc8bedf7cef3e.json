{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/NewTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TransactionForm from './TransactionForm';\nimport Card from '../Card';\nimport './NewTransaction.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTransaction = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveTransactionDataHandler = transactionData => {\n    setIsEditing(false);\n    let token = localStorage.getItem('token');\n    fetch('http://localhost:3000/transactions.json', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      //body: JSON.stringify({\"transaction\": {\"type_of\": 'expense', amount: 11, title: 'test'}}),\n      body: JSON.stringify({\n        \"transaction\": transactionData\n      })\n    }).then(() => {\n      props.onAddTransaction(transactionData);\n    });\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-transaction\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"transaction-item\",\n      children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startEditingHandler,\n        children: \"Add New Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(TransactionForm, {\n        onSaveTransactionData: saveTransactionDataHandler,\n        onCancel: stopEditingHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTransaction, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = NewTransaction;\nexport default NewTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransaction\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/NewTransaction.js"],"names":["React","useState","TransactionForm","Card","NewTransaction","props","isEditing","setIsEditing","saveTransactionDataHandler","transactionData","token","localStorage","getItem","fetch","method","headers","body","JSON","stringify","then","onAddTransaction","startEditingHandler","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMO,0BAA0B,GAAIC,eAAD,IAAqB;AACpDF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,QAAIG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,IAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASL,KAAM,EAD5B;AAEL,wBAAgB;AAFX,OAFoC;AAM7C;AACAM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,uBAAeT;AAAhB,OAAf;AAPuC,KAA5C,CAAL,CAQGU,IARH,CAQQ,MAAI;AACRd,MAAAA,KAAK,CAACe,gBAAN,CAAuBX,eAAvB;AACH,KAVD;AAWH,GAdD;;AAgBA,QAAMY,mBAAmB,GAAG,MAAM;AAC9Bd,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMe,kBAAkB,GAAE,MAAM;AAC5Bf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,iBACC,CAACD,SAAD,iBACG;AAAQ,QAAA,OAAO,EAAEe,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAICf,SAAS,iBACN,QAAC,eAAD;AACI,QAAA,qBAAqB,EAAEE,0BAD3B;AAEI,QAAA,QAAQ,EAAEc;AAFd;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA1CD;;GAAMlB,c;;KAAAA,c;AA4CN,eAAeA,cAAf","sourcesContent":["import React, {useState} from 'react';\nimport TransactionForm from './TransactionForm';\nimport Card from '../Card';\nimport './NewTransaction.css';\n\nconst NewTransaction = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    \n    const saveTransactionDataHandler = (transactionData) => {\n        setIsEditing(false);\n        let token = localStorage.getItem('token');\n        fetch('http://localhost:3000/transactions.json', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n            },\n            //body: JSON.stringify({\"transaction\": {\"type_of\": 'expense', amount: 11, title: 'test'}}),\n            body: JSON.stringify({\"transaction\": transactionData}),\n        }).then(()=>{\n            props.onAddTransaction(transactionData);\n        })\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler =() => {\n        setIsEditing(false);    \n    }\n\n  return (\n    <div className='new-transaction'>\n        <Card className='transaction-item'>\n        {!isEditing && (\n            <button onClick={startEditingHandler}>Add New Expense</button>\n        )}\n        {isEditing && (\n            <TransactionForm \n                onSaveTransactionData={saveTransactionDataHandler} \n                onCancel={stopEditingHandler}\n            />\n        )} \n        </Card>\n    </div>\n  );\n};\n\nexport default NewTransaction;"]},"metadata":{},"sourceType":"module"}