{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport createRequest from '../../request'; // import {CloudinaryContext} from 'cloudinary-react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionForm = props => {\n  _s();\n\n  console.log(props);\n  const [enteredDescription, setEnteredDescription] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredType, setEnteredType] = useState('Expense');\n  const [enteredCategory, setEnteredCategory] = useState('');\n  const [image, setImage] = useState('');\n  const [url, setUrl] = useState('');\n  const CATEGORIES_SERVER_URL = `http://localhost:3000/users.json`;\n  const [categoryList, setCategoryList] = useState(''); //check validation\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n\n  const uploadImage = () => {\n    const data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'ese6jnd3');\n    data.append(\"cloud_name\", 'dgpwctfjt');\n    fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\", {\n      method: 'post',\n      body: data\n    }).then(resp => resp.json()).then(data => {\n      setUrl(data.url);\n      console.log(data.url);\n    }).catch(err => console.log(err));\n  };\n\n  const componentDidMount = () => {\n    const fetchCategories = () => {\n      axios.get(CATEGORIES_SERVER_URL).then(reps => {\n        categoryList = reps.data.categories;\n        console.log(categoryList);\n      });\n    };\n\n    fetchCategories();\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (enteredAmount.trim() === \"\") {\n      setAmountIsValid(false);\n      return;\n    }\n\n    setAmountIsValid(true);\n    const transactionData = {\n      transactions: [{\n        typeof: Number(enteredType),\n        amount: Number(enteredAmount),\n        title: enteredTitle,\n        description: enteredDescription,\n        receipt: url,\n        date: new Date(enteredDate),\n        category_id: Number(enteredCategory)\n      }]\n    };\n    props.onSaveTransactionData(transactionData);\n    setEnteredDescription('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2021-01-01\",\n          max: \"2025-12-31\",\n          onChange: e => setEnteredDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Income/Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: enteredType,\n          onChange: e => setEnteredType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: enteredCategory,\n          onChange: e => setEnteredCategory(e.target.value),\n          required: true,\n          children: categoryList.map(category => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: [category.icon, category.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"Title\",\n          value: enteredTitle,\n          onChange: e => setEnteredTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: e => setEnteredAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter an amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: enteredDescription,\n          onChange: e => setEnteredDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: uploadImage,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionForm, \"qS+WFg7lCO4MCd2XRG9tbaJVDy4=\");\n\n_c = TransactionForm;\nexport default TransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionForm.js"],"names":["axios","React","useState","Form","Row","Col","Button","createRequest","TransactionForm","props","console","log","enteredDescription","setEnteredDescription","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","enteredTitle","setEnteredTitle","enteredType","setEnteredType","enteredCategory","setEnteredCategory","image","setImage","url","setUrl","CATEGORIES_SERVER_URL","categoryList","setCategoryList","amountIsValid","setAmountIsValid","uploadImage","data","FormData","append","fetch","method","body","then","resp","json","catch","err","componentDidMount","fetchCategories","get","reps","categories","submitHandler","event","preventDefault","trim","transactionData","transactions","typeof","Number","amount","title","description","receipt","date","Date","category_id","onSaveTransactionData","e","target","value","map","category","id","icon","name","files","onCancel"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useState} from 'react';\nimport { Form , Row, Col, Button } from 'react-bootstrap';\nimport createRequest from '../../request';\n// import {CloudinaryContext} from 'cloudinary-react';\n\n\nconst TransactionForm = (props)=>{\n    console.log(props);\n    const [enteredDescription, setEnteredDescription] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredType, setEnteredType] = useState('Expense');\n    const [enteredCategory, setEnteredCategory]=useState('');\n    const [image, setImage] = useState('');\n    const [url, setUrl] = useState('');\n    const CATEGORIES_SERVER_URL = `http://localhost:3000/users.json`;\n    const [categoryList, setCategoryList] = useState(''); \n    //check validation\n    const [amountIsValid, setAmountIsValid] = useState(true);\n\n    const uploadImage =() => {\n        const data = new FormData();\n        data.append('file', image)\n        data.append('upload_preset', 'ese6jnd3')\n        data.append(\"cloud_name\", 'dgpwctfjt')\n        fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\",{\n            method: 'post',\n            body: data\n        }).then(resp => \n            resp.json()\n        ).then(data => {\n            setUrl(data.url);\n            console.log(data.url);\n        }).catch(err => console.log(err))\n    }\n    \n    const componentDidMount = ()=>{\n        const fetchCategories = () => {\n            axios.get(CATEGORIES_SERVER_URL).then(reps=>{\n                categoryList = reps.data.categories\n                console.log(categoryList);\n            })\n        }\n        fetchCategories();\n    }\n\n    const submitHandler =(event) => {\n        event.preventDefault();  \n\n        if (enteredAmount.trim()===\"\") {\n            setAmountIsValid(false);\n            return;\n        }\n        setAmountIsValid(true);\n\n        const transactionData = {\n            transactions:[{\n            typeof: Number(enteredType),\n            amount: Number(enteredAmount), \n            title: enteredTitle,\n            description: enteredDescription,  \n            receipt: url, \n            date: new Date(enteredDate),\n            category_id: Number(enteredCategory),\n            }],\n        };\n        props.onSaveTransactionData(transactionData);\n        setEnteredDescription('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n    return (\n    <form onSubmit={submitHandler}>\n        <Row className=\"align-items-center\">\n            <Col sm={2} className=\"my-1\">\n                <label>Date</label>\n                <Form.Control  type=\"date\" value={enteredDate} min=\"2021-01-01\" max=\"2025-12-31\" onChange={(e)=> setEnteredDate(e.target.value)}/>\n            </Col>\n    \n            <Col sm={2} className=\"my-1\">\n                <label>Income/Expense</label>\n                <Form.Select value={enteredType} onChange={(e) => setEnteredType(e.target.value)} required>\n                <option value=\"\">Select Type</option>\n                <option value=\"0\">Expense</option>\n                <option value=\"1\">Income</option>\n                </Form.Select>\n            </Col>  \n\n            <Col sm={2} className=\"my-1\">\n                <label>Category</label>\n                <Form.Select value={enteredCategory} onChange={(e)=>setEnteredCategory(e.target.value)} required>\n                    {categoryList.map(category => {\n                        return (\n                            <option value={category.id}>{category.icon}{category.name}</option>\n                        )\n                    })}\n                </Form.Select>\n            </Col>\n            <Col sm={2} className=\"my-1\">\n                <label>Title</label>\n                <Form.Control type=\"Title\" value={enteredTitle} onChange={(e)=> setEnteredTitle(e.target.value)}/>\n            </Col>\n\n            <Col sm={2} className=\"my-1\">\n                <label>Amount</label>\n                <Form.Control type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={(e) => setEnteredAmount(e.target.value)}/>\n                {!amountIsValid && <p className='error-text'>Please enter an amount </p>}\n            </Col>\n\n            <Col sm={2} className=\"my-1\">\n                <label>Description</label>\n                <Form.Control type=\"text\" value={enteredDescription} onChange={(e)=> setEnteredDescription(e.target.value)}/>\n            </Col>\n            <Col sm={2} className=\"my-1\">\n                <label>Upload</label>\n                <Form.Control type=\"file\" onChange={(e)=> setImage(e.target.files[0])}/>\n            </Col>\n\n            <Col xs=\"auto\" className='my-1'>\n                <Button type=\"submit\" onClick={uploadImage}>Add</Button>\n                <Button type=\"button\" onClick={props.onCancel}>Cancel</Button>\n            </Col>\n            </Row>\n    </form>\n    );\n};\n\nexport default TransactionForm;"]},"metadata":{},"sourceType":"module"}