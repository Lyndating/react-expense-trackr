{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/Transactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TransactionList from './TransactionList';\nimport TransactionsFilter from './TransactionsFilter';\nimport Card from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transactions = props => {\n  _s();\n\n  const current = new Date();\n  const currentMonth = current.getMonth();\n  const [filteredMonth, setFilteredMonth] = useState(currentMonth);\n\n  const filterChangeHandler = selectedMonth => {\n    setFilteredMonth(selectedMonth);\n    console.log(selectedMonth);\n  };\n\n  const filteredTransactions = props.items.filter(transaction => {\n    console.log(filteredMonth);\n\n    if (filteredMonth === \"-\") {\n      return transaction.date.getFullYear().toString() === '2022';\n    }\n\n    return transaction.date.getMonth().toString() === filteredMonth;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"Transactions\",\n      children: [/*#__PURE__*/_jsxDEV(TransactionsFilter, {\n        selected: filteredMonth,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n        items: filteredTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Transactions, \"DrkGpaki0pgMNaVhnLf46mxYwzA=\");\n\n_c = Transactions;\nexport default Transactions;\nconst sample_transactions = [{\n  id: '1',\n  title: 'Toilet Paper',\n  type: 'Expense',\n  description: '250 rolls pack',\n  amount: 24.12,\n  date: new Date(2022, 2, 14)\n}, {\n  id: '2',\n  title: 'New TV',\n  type: 'Expense',\n  description: 'Sony 4K Ultra HD',\n  amount: 799.49,\n  date: new Date(2022, 2, 28)\n}, {\n  id: '3',\n  title: 'Car Insurance',\n  type: 'Expense',\n  description: 'yearly payment',\n  amount: 294.67,\n  date: new Date(2022, 4, 1)\n}, {\n  id: '4',\n  title: 'New Chair',\n  type: 'Expense',\n  description: 'good guy special sale',\n  amount: 450.00,\n  date: new Date(2022, 5, 1)\n}, {\n  id: '5',\n  title: 'Salary',\n  type: 'Income',\n  description: 'weekly salary',\n  amount: 4000.00,\n  date: new Date(2022, 1, 30)\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/Transactions.js"],"names":["React","useState","TransactionList","TransactionsFilter","Card","Transactions","props","current","Date","currentMonth","getMonth","filteredMonth","setFilteredMonth","filterChangeHandler","selectedMonth","console","log","filteredTransactions","items","filter","transaction","date","getFullYear","toString","sample_transactions","id","title","type","description","amount"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TransactionList from './TransactionList';\nimport TransactionsFilter from './TransactionsFilter';\nimport Card from '../Card'\n\n\nconst Transactions = (props) => {\n    const current = new Date();\n    const currentMonth = current.getMonth();\n    const [filteredMonth, setFilteredMonth] = useState(currentMonth);\n  \n    const filterChangeHandler = (selectedMonth) => {\n        setFilteredMonth(selectedMonth);\n        console.log(selectedMonth);\n    };\n  \n    const filteredTransactions = props.items.filter((transaction) => {\n        console.log(filteredMonth);\n        if(filteredMonth === \"-\"){\n            return transaction.date.getFullYear().toString()==='2022';\n        }\n        return  transaction.date.getMonth().toString()===filteredMonth;\n    });\n  \n    return (\n      <div>\n        <Card className='Transactions'>\n          <TransactionsFilter\n            selected={filteredMonth}\n            onChangeFilter={filterChangeHandler}\n          />\n\n          <TransactionList items={filteredTransactions} />\n        </Card>\n      </div>\n    );\n  };\n  \n  export default Transactions;\n\n  const sample_transactions = [\n    {\n      id: '1',\n      title: 'Toilet Paper',\n      type: 'Expense',\n      description: '250 rolls pack',\n      amount: 24.12,\n      date: new Date(2022, 2, 14),\n    },\n    { \n        id: '2', \n        title: 'New TV', \n        type: 'Expense',\n        description: 'Sony 4K Ultra HD',\n        amount: 799.49, \n        date: new Date(2022, 2, 28) },\n    {\n      id: '3',\n      title: 'Car Insurance',\n      type: 'Expense',\n      description: 'yearly payment',\n      amount: 294.67,\n      date: new Date(2022, 4, 1),\n    },\n    {\n      id: '4',\n      title: 'New Chair',\n      type: 'Expense',\n      description: 'good guy special sale',\n      amount: 450.00,\n      date: new Date(2022, 5, 1),\n    },\n    {\n      id: '5',\n      title: 'Salary',\n      type: 'Income',\n      description: 'weekly salary',\n      amount: 4000.00,\n      date: new Date(2022, 1, 30),\n    },\n  ];\n\n"]},"metadata":{},"sourceType":"module"}