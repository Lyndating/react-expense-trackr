{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NewTransaction from './NewTransaction'; // import Transactions from './Transactions';\n\nimport TransactionItem from './TransactionItem';\nimport Navigation from '../Navigation';\nimport createRequest from '../../request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionsDisplay = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState();\n  const input = '/transactions.json';\n  useEffect(() => {\n    createRequest(input).then(data => {\n      console.log(data);\n      setTransactions(data);\n    });\n  }, []);\n\n  const addTransactionHandler = transaction => {\n    setTransactions(prevTransactions => {\n      return [transaction, ...prevTransactions];\n    });\n  };\n\n  console.log(transactions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewTransaction, {\n      onAddTransaction: addTransactionHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TransactionItem, {\n      title: transaction.title,\n      type: transaction.type,\n      description: transaction.description,\n      amount: transaction.amount,\n      date: transaction.date\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionsDisplay, \"0dAlvC3beELaRh2kS6ENpnkOG3g=\");\n\n_c = TransactionsDisplay;\nexport default TransactionsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsDisplay\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsDisplay.js"],"names":["React","useState","useEffect","NewTransaction","TransactionItem","Navigation","createRequest","TransactionsDisplay","transactions","setTransactions","input","then","data","console","log","addTransactionHandler","transaction","prevTransactions","title","type","description","amount","date","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,aAAP,MAA0B,eAA1B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AAGA,QAAMS,KAAK,GAAG,oBAAd;AACAR,EAAAA,SAAS,CAAC,MAAI;AACNI,IAAAA,aAAa,CAACI,KAAD,CAAb,CAAqBC,IAArB,CAA2BC,IAAD,IAAS;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAH,MAAAA,eAAe,CAACG,IAAD,CAAf;AAEP,KAJG;AAKP,GANQ,EAMP,EANO,CAAT;;AASA,QAAMG,qBAAqB,GAAIC,WAAD,IAAiB;AAC3CP,IAAAA,eAAe,CAAEQ,gBAAD,IAAsB;AACpC,aAAO,CAACD,WAAD,EAAc,GAAGC,gBAAjB,CAAP;AACD,KAFc,CAAf;AAGH,GAJD;;AAKAJ,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,gBAAgB,EAAEO;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII,QAAC,eAAD;AAEF,MAAA,KAAK,EAAEC,WAAW,CAACE,KAFjB;AAGF,MAAA,IAAI,EAAEF,WAAW,CAACG,IAHhB;AAIF,MAAA,WAAW,EAAEH,WAAW,CAACI,WAJvB;AAKF,MAAA,MAAM,EAAEJ,WAAW,CAACK,MALlB;AAMF,MAAA,IAAI,EAAEL,WAAW,CAACM;AANhB,OACGN,WAAW,CAACO,EADf;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CArCD;;GAAMhB,mB;;KAAAA,mB;AAuCN,eAAeA,mBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport NewTransaction from './NewTransaction';\n// import Transactions from './Transactions';\nimport TransactionItem from './TransactionItem';\nimport Navigation from '../Navigation';\nimport createRequest from '../../request';\n\nconst TransactionsDisplay = () => {\n    const [transactions, setTransactions] = useState();\n\n\n    const input = '/transactions.json';\n    useEffect(()=>{ \n            createRequest(input).then((data)=> {\n                console.log(data);\n                setTransactions(data);       \n            \n        })    \n    },[]);\n\n    \n    const addTransactionHandler = (transaction) => {\n        setTransactions((prevTransactions) => {\n          return [transaction, ...prevTransactions];\n        });\n    };\n    console.log(transactions);\n    return (\n        <div>\n            <Navigation />\n            <NewTransaction onAddTransaction={addTransactionHandler}/>\n            \n            <TransactionItem\n          key={transaction.id}\n          title={transaction.title}\n          type={transaction.type}\n          description={transaction.description}\n          amount={transaction.amount}\n          date={transaction.date}\n        />\n            {/* <Transactions items={transactions}/> */}\n        </div>\n    )\n\n}\n\nexport default TransactionsDisplay;"]},"metadata":{},"sourceType":"module"}