{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Category from './components/Category';\nimport NewTransaction from './components/Transaction/NewTransaction';\nimport Transactions from './components/Transaction/Transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const [transactions, setTransactions] = useState(sample_transactions);\n\n  function signUp(user) {\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: user.email,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          password: user.password,\n          password_confirmation: user.password_confirmation\n        }\n      })\n    }).then(response => response.json()).then(returnedUser => setUser(returnedUser));\n  }\n\n  function signIn(user) {\n    fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: user.email,\n          password: user.password\n        }\n      })\n    }).then(response => response.json()).then(result => {\n      if (result.token) {\n        localStorage.setItem('token', result.token);\n        setUser(result.user);\n      } else {\n        setError(result.error);\n      }\n    });\n  }\n\n  const addTransactionHandler = transaction => {\n    setTransactions(prevTransactions => {\n      return [transaction, ...prevTransactions];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [console.log(user), user.email ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignIn, {\n        signIn: signIn,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n        signUp: signUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(NewTransaction, {\n      onAddTransaction: addTransactionHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Transactions, {\n      items: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"puwim6dECixIUfJaOhE7L6+TiLY=\");\n\n_c = App;\nexport default App;\nconst sample_transactions = [{\n  id: '1',\n  title: 'Toilet Paper',\n  type: 'Expense',\n  description: '250 rolls pack',\n  amount: 24.12,\n  date: new Date(2022, 2, 14)\n}, {\n  id: '2',\n  title: 'New TV',\n  type: 'Expense',\n  description: 'Sony 4K Ultra HD',\n  amount: 799.49,\n  date: new Date(2022, 2, 28)\n}, {\n  id: '3',\n  title: 'Car Insurance',\n  type: 'Expense',\n  description: 'yearly payment',\n  amount: 294.67,\n  date: new Date(2022, 4, 1)\n}, {\n  id: '4',\n  title: 'New Chair',\n  type: 'Expense',\n  description: 'good guy special sale',\n  amount: 450.00,\n  date: new Date(2022, 5, 1)\n}, {\n  id: '5',\n  title: 'Salary',\n  type: 'Income',\n  description: 'weekly salary',\n  amount: 4000.00,\n  date: new Date(2022, 1, 30)\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/App.js"],"names":["React","useState","SignUp","SignIn","Category","NewTransaction","Transactions","App","user","setUser","error","setError","transactions","setTransactions","sample_transactions","signUp","fetch","method","headers","body","JSON","stringify","email","first_name","last_name","password","password_confirmation","then","response","json","returnedUser","signIn","result","token","localStorage","setItem","addTransactionHandler","transaction","prevTransactions","console","log","id","title","type","description","amount","date","Date"],"mappings":"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","sourcesContent":["\nimport React,{ useState } from 'react';\nimport './App.css';\n\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Category from './components/Category';\nimport NewTransaction from './components/Transaction/NewTransaction';\nimport Transactions from './components/Transaction/Transactions';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const [transactions, setTransactions] = useState(sample_transactions);\n\n  function signUp (user) {\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: user.email,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          password: user.password,\n          password_confirmation: user.password_confirmation\n        }\n      })\n    })\n    .then(response => response.json())\n    .then(returnedUser => setUser(returnedUser))\n  }\n\n  function signIn (user) {\n    fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: user.email,\n          password: user.password\n        }\n      })\n    })\n    .then(response => response.json())\n    .then(result => {\n      if (result.token) {\n        localStorage.setItem('token', result.token)\n        setUser(result.user)\n      } else {\n        setError(result.error)\n      }\n    })\n  }\n\n  const addTransactionHandler = (transaction) => {\n    setTransactions((prevTransactions) => {\n      return [transaction, ...prevTransactions];\n    });\n  }\n\n  return (\n    <div className=\"App\">\n\n      {console.log(user)}\n\n      {user.email ? <h2>Welcome, {user.first_name}</h2> :\n      (\n        <>\n          <SignIn signIn={signIn} error={error} />\n          <SignUp signUp={signUp} />\n        </>\n      )\n      }\n      \n      {/* <Category /> */}\n      <NewTransaction onAddTransaction={addTransactionHandler}/>\n      <Transactions items={transactions}/>\n    </div>\n);\n}\nexport default App;\n\nconst sample_transactions = [\n  {\n    id: '1',\n    title: 'Toilet Paper',\n    type: 'Expense',\n    description: '250 rolls pack',\n    amount: 24.12,\n    date: new Date(2022, 2, 14),\n  },\n  { \n      id: '2', \n      title: 'New TV', \n      type: 'Expense',\n      description: 'Sony 4K Ultra HD',\n      amount: 799.49, \n      date: new Date(2022, 2, 28) },\n  {\n    id: '3',\n    title: 'Car Insurance',\n    type: 'Expense',\n    description: 'yearly payment',\n    amount: 294.67,\n    date: new Date(2022, 4, 1),\n  },\n  {\n    id: '4',\n    title: 'New Chair',\n    type: 'Expense',\n    description: 'good guy special sale',\n    amount: 450.00,\n    date: new Date(2022, 5, 1),\n  },\n  {\n    id: '5',\n    title: 'Salary',\n    type: 'Income',\n    description: 'weekly salary',\n    amount: 4000.00,\n    date: new Date(2022, 1, 30),\n  },\n];"]},"metadata":{},"sourceType":"module"}