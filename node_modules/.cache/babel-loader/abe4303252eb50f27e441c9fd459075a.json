{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../Card';\nimport './TransactionItem.css';\nimport { Button } from 'react-bootstrap';\nimport TransactionDate from './TransactionDate';\nimport TransactionEdit from './TransactionEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionItem = props => {\n  _s();\n\n  console.log(props);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const updateHandler = transactionData => {\n    console.log(transactionData);\n    setIsEditing(false);\n    let token = localStorage.getItem('token');\n    fetch(`http://localhost:3000/transactions/${props.id}.json`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      //body: JSON.stringify({\"transaction\": {\"type_of\": 'expense', amount: 11, title: 'test'}}),\n      body: JSON.stringify({\n        \"transaction\": transactionData\n      })\n    }).then(() => {\n      props.onAddTransaction(transactionData);\n    });\n  };\n\n  const handleDelele = event => {\n    event.preventDefault();\n    console.log(props.id);\n    let token = localStorage.getItem('token');\n    const id = props.id;\n    fetch(`http://localhost:3000/transactions/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(response.status);\n      props.onDeleteTransaction(props.id);\n    });\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  const transactionData = {\n    type_of: props.type,\n    amount: props.amount,\n    title: props.title,\n    description: props.description,\n    receipt: props.url,\n    date: props.date,\n    category_id: Number(props.category_id)\n  };\n  console.log(isEditing);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"transaction-item\",\n      children: [/*#__PURE__*/_jsxDEV(TransactionDate, {\n        date: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: props.category_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transaction-item__price\",\n          children: [\"$\", props.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-info mr-1\",\n          onClick: showTransactionEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-danger\",\n          onClick: handleDelele,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"transaction-item\",\n      children: /*#__PURE__*/_jsxDEV(TransactionEdit, {\n        onCancel: stopEditingHandler,\n        onUpateTransactionData: updateHandler,\n        items: transactionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TransactionItem, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = TransactionItem;\nexport default TransactionItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionItem\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionItem.js"],"names":["React","useState","Card","Button","TransactionDate","TransactionEdit","TransactionItem","props","console","log","isEditing","setIsEditing","updateHandler","transactionData","token","localStorage","getItem","fetch","id","method","headers","body","JSON","stringify","then","onAddTransaction","handleDelele","event","preventDefault","response","status","onDeleteTransaction","stopEditingHandler","type_of","type","amount","title","description","receipt","url","date","category_id","Number","showTransactionEdit"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Card from '../Card'\nimport './TransactionItem.css';\nimport {Button} from 'react-bootstrap';\nimport TransactionDate from './TransactionDate';\nimport TransactionEdit from './TransactionEdit';\n\nconst TransactionItem = (props) => {\n  console.log(props);\n  const [isEditing, setIsEditing] = useState(false);\n\n\n    const updateHandler = (transactionData) => {\n      console.log(transactionData);\n      setIsEditing(false);\n      let token = localStorage.getItem('token');\n      fetch(`http://localhost:3000/transactions/${props.id}.json`, {\n          method: 'POST',\n          headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n          },\n          //body: JSON.stringify({\"transaction\": {\"type_of\": 'expense', amount: 11, title: 'test'}}),\n          body: JSON.stringify({\"transaction\": transactionData}),\n      }).then(()=>{\n          props.onAddTransaction(transactionData);\n      })   \n\n    }\n\n    const handleDelele = (event) => {\n      event.preventDefault();\n      console.log(props.id)\n      let token = localStorage.getItem('token')\n      const id = props.id\n      fetch(`http://localhost:3000/transactions/${id}`, {\n          method: 'DELETE',\n          headers: {  \n            'Authorization': `Bearer ${token}`\n          }\n      })\n      .then(response => {\n        console.log(response.status)\n        props.onDeleteTransaction(props.id)\n      })\n    }\n\n    const stopEditingHandler = ()=>{\n      setIsEditing(false);\n    }\n    const transactionData = {\n        type_of: props.type,\n        amount: props.amount, \n        title: props.title,\n        description: props.description,  \n        receipt: props.url, \n        date: props.date,\n        category_id: Number(props.category_id),\n    }\n    console.log(isEditing);\n    return (\n      <li>\n        {!isEditing && \n          <Card className='transaction-item'>\n            <TransactionDate date={props.date} />\n            <div className='transaction-item__description'>\n              <h3>{props.category_id}</h3>\n              <h4>{props.title}</h4>\n              <span>{props.description}</span>\n              <div className='transaction-item__price'>${props.amount}</div>\n            </div>\n            <div>\n            <Button className='btn btn-info mr-1'onClick={showTransactionEdit}>Edit</Button>\n              <Button className='btn btn-danger' onClick={handleDelele}>Delete</Button>\n\n\n            </div>\n          </Card>\n        }\n        {isEditing &&\n          <Card className='transaction-item'>\n            <TransactionEdit onCancel={stopEditingHandler} onUpateTransactionData={updateHandler} items={transactionData}/>\n          </Card>\n        } \n      </li>\n    );\n  };\n  \n  export default TransactionItem;"]},"metadata":{},"sourceType":"module"}