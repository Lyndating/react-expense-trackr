{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/Transactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TransactionList from './TransactionList';\nimport TransactionsFilter from './TransactionsFilter';\nimport NewTransaction from './NewTransaction';\nimport Card from '../Card';\nimport createRequest from '../../request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transactions = props => {\n  _s();\n\n  const [transactions, setTransactions] = useState();\n  const current = new Date();\n  const currentMonth = current.getMonth();\n  const [filteredMonth, setFilteredMonth] = useState(currentMonth);\n\n  const addTransactionHandler = transaction => {\n    setTransactions(prevTransactions => {\n      return [transaction, ...prevTransactions];\n    });\n  };\n\n  createRequest(`/users.json`).then(reps => {});\n\n  const filterChangeHandler = selectedMonth => {\n    setFilteredMonth(selectedMonth);\n    console.log(selectedMonth);\n  };\n\n  const filteredTransactions = props.items.filter(transaction => {\n    console.log(filteredMonth);\n\n    if (filteredMonth === \"-\") {\n      return transaction.date.getFullYear().toString() === '2022';\n    }\n\n    return transaction.date.getMonth().toString() === filteredMonth;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewTransaction, {\n      onAddTransaction: addTransactionHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"Transactions\",\n      children: [/*#__PURE__*/_jsxDEV(TransactionsFilter, {\n        selected: filteredMonth,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n        items: filteredTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Transactions, \"SosAH3GA0qBA0x6dXOEHnOh1IoE=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/Transactions.js"],"names":["React","useState","TransactionList","TransactionsFilter","NewTransaction","Card","createRequest","Transactions","props","transactions","setTransactions","current","Date","currentMonth","getMonth","filteredMonth","setFilteredMonth","addTransactionHandler","transaction","prevTransactions","then","reps","filterChangeHandler","selectedMonth","console","log","filteredTransactions","items","filter","date","getFullYear","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,aAAP,MAA0B,eAA1B;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,EAAhD;AACA,QAAMU,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,QAAMC,YAAY,GAAGF,OAAO,CAACG,QAAR,EAArB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAACY,YAAD,CAAlD;;AAEA,QAAMI,qBAAqB,GAAIC,WAAD,IAAiB;AAC7CR,IAAAA,eAAe,CAAES,gBAAD,IAAsB;AACpC,aAAO,CAACD,WAAD,EAAc,GAAGC,gBAAjB,CAAP;AACD,KAFc,CAAf;AAGD,GAJD;;AAKAb,EAAAA,aAAa,CAAE,aAAF,CAAb,CAA6Bc,IAA7B,CAAmCC,IAAD,IAAQ,CAEzC,CAFD;;AAGA,QAAMC,mBAAmB,GAAIC,aAAD,IAAmB;AAC3CP,IAAAA,gBAAgB,CAACO,aAAD,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACH,GAHD;;AAKA,QAAMG,oBAAoB,GAAGlB,KAAK,CAACmB,KAAN,CAAYC,MAAZ,CAAoBV,WAAD,IAAiB;AAC7DM,IAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;;AACA,QAAGA,aAAa,KAAK,GAArB,EAAyB;AACrB,aAAOG,WAAW,CAACW,IAAZ,CAAiBC,WAAjB,GAA+BC,QAA/B,OAA4C,MAAnD;AACH;;AACD,WAAQb,WAAW,CAACW,IAAZ,CAAiBf,QAAjB,GAA4BiB,QAA5B,OAAyChB,aAAjD;AACH,GAN4B,CAA7B;AAQA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,gBAAgB,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACE,QAAC,kBAAD;AACE,QAAA,QAAQ,EAAEF,aADZ;AAEE,QAAA,cAAc,EAAEO;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEI;AAAxB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAxCH;;GAAMnB,Y;;KAAAA,Y;AA0CJ,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport TransactionList from './TransactionList';\nimport TransactionsFilter from './TransactionsFilter';\nimport NewTransaction from './NewTransaction';\nimport Card from '../Card'\nimport createRequest from '../../request';\n\n\nconst Transactions = (props) => {\n    const [transactions, setTransactions] = useState();\n    const current = new Date();\n    const currentMonth = current.getMonth();\n    const [filteredMonth, setFilteredMonth] = useState(currentMonth);\n\n    const addTransactionHandler = (transaction) => {\n      setTransactions((prevTransactions) => {\n        return [transaction, ...prevTransactions];\n      });\n    }\n    createRequest(`/users.json`).then((reps)=>{\n      \n    })\n    const filterChangeHandler = (selectedMonth) => {\n        setFilteredMonth(selectedMonth);\n        console.log(selectedMonth);\n    };\n  \n    const filteredTransactions = props.items.filter((transaction) => {\n        console.log(filteredMonth);\n        if(filteredMonth === \"-\"){\n            return transaction.date.getFullYear().toString()==='2022';\n        }\n        return  transaction.date.getMonth().toString()===filteredMonth;\n    });\n  \n    return (\n      <div>\n        <NewTransaction onAddTransaction={addTransactionHandler}/>\n        <Card className='Transactions'>\n          <TransactionsFilter\n            selected={filteredMonth}\n            onChangeFilter={filterChangeHandler}\n          />\n\n          <TransactionList items={filteredTransactions} />\n        </Card>\n      </div>\n    );\n  };\n  \n  export default Transactions;\n"]},"metadata":{},"sourceType":"module"}