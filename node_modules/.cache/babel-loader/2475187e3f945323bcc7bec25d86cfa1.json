{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport createRequest from '../../request';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionEdit = props => {\n  _s();\n\n  console.log(props);\n  const [enteredDescription, setEnteredDescription] = useState(props.description);\n  const [enteredAmount, setEnteredAmount] = useState(props.amount);\n  const [enteredDate, setEnteredDate] = useState(props.date);\n  const [enteredTitle, setEnteredTitle] = useState(props.title);\n  const [enteredType, setEnteredType] = useState(props.type);\n  const [enteredCategory, setEnteredCategory] = useState(props.category_id);\n  const [url, setUrl] = useState('');\n  const [categoryList, setCategoryList] = useState([]); //check validation\n\n  const [formIsValid, setFormISValid] = useState(true);\n\n  const uploadImage = e => {\n    setFormISValid(false);\n    const image = e.target.files[0];\n    const data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'ese6jnd3');\n    data.append(\"cloud_name\", 'dgpwctfjt');\n    fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\", {\n      method: 'post',\n      body: data\n    }).then(resp => resp.json()).then(data => {\n      setUrl(data.url);\n      setFormISValid(true);\n\n      if (data.url) {\n        setFormISValid(true);\n      }\n    });\n  };\n\n  const input = '/categories.json';\n  useEffect(() => {\n    const fetchCategories = async () => {\n      createRequest(input).then(data => {\n        console.log(data);\n        setCategoryList(data);\n      });\n    };\n\n    const timer = setTimeout(() => {\n      fetchCategories();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [input]);\n  let record = props.items;\n  let defaultType = record.type_of ? record.type_of : \"\";\n  let defaultDate = record.date ? record.date : \"\";\n  let defaultTitle = record.title ? record.title : \"\";\n  let defaultDescription = record.description ? record.description : \"\";\n  let defaultFile = record.receipt ? record.receipt : \"\";\n  let defaultCategory = record.category_id ? record.category_id : \"\";\n\n  const submitHandler = event => {\n    event.preventDefault(); // if (enteredAmount.trim()===\"\") {\n    //     setAmountIsValid(false);\n    //     return;\n    // }\n    // setAmountIsValid(true);\n\n    const transactionData = {\n      type_of: enteredType,\n      amount: enteredAmount,\n      title: enteredTitle,\n      description: enteredDescription,\n      receipt: url,\n      date: enteredDate,\n      category_id: Number(enteredCategory)\n    };\n    props.onSaveTransactionData(transactionData);\n    setEnteredDescription('');\n    setEnteredAmount('');\n    setEnteredDate('');\n    setFormISValid(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Income/Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            defaultValue: defaultType,\n            value: enteredType,\n            onChange: e => setEnteredType(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"expense\",\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"income\",\n              children: \"Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            defaultValue: defaultDate,\n            type: \"date\",\n            value: enteredDate,\n            min: \"2021-01-01\",\n            max: new Date(),\n            onChange: e => setEnteredDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: enteredCategory,\n            onChange: e => setEnteredCategory(e.target.value),\n            children: categoryList.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: [\"\\uD83E\\uDD81 \", category.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"Title\",\n            value: enteredTitle,\n            onChange: e => setEnteredTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            defaultValue: props.items.amount,\n            type: \"number\",\n            value: enteredAmount,\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: e => setEnteredAmount(e.target.value),\n            placeholder: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: enteredDescription,\n            onChange: e => setEnteredDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: uploadImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 1,\n          className: \"my-1\",\n          children: [formIsValid && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), !formIsValid && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: true,\n            children: \"Uploading..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 1,\n          className: \"btn-group ml-auto\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: props.onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionEdit, \"4eM42y7PClNH1tcqRVbi/6PRNL0=\");\n\n_c = TransactionEdit;\nexport default TransactionEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionEdit\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionEdit.js"],"names":["React","useState","useEffect","createRequest","Row","Col","Form","Button","TransactionEdit","props","console","log","enteredDescription","setEnteredDescription","description","enteredAmount","setEnteredAmount","amount","enteredDate","setEnteredDate","date","enteredTitle","setEnteredTitle","title","enteredType","setEnteredType","type","enteredCategory","setEnteredCategory","category_id","url","setUrl","categoryList","setCategoryList","formIsValid","setFormISValid","uploadImage","e","image","target","files","data","FormData","append","fetch","method","body","then","resp","json","input","fetchCategories","timer","setTimeout","clearTimeout","record","items","defaultType","type_of","defaultDate","defaultTitle","defaultDescription","defaultFile","receipt","defaultCategory","submitHandler","event","preventDefault","transactionData","Number","onSaveTransactionData","value","Date","map","category","id","name","onCancel"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport createRequest from '../../request';\nimport {Row,Col,Form, Button} from 'react-bootstrap';\n\nconst TransactionEdit = (props)=>{\n    console.log(props);\n    const [enteredDescription, setEnteredDescription] = useState(props.description);\n    const [enteredAmount, setEnteredAmount] = useState(props.amount);\n    const [enteredDate, setEnteredDate] = useState(props.date);\n    const [enteredTitle, setEnteredTitle] = useState(props.title);\n    const [enteredType, setEnteredType] = useState(props.type);\n    const [enteredCategory, setEnteredCategory]=useState(props.category_id);\n    const [url, setUrl] = useState('');\n    const [categoryList, setCategoryList] = useState([]); \n    //check validation\n    const [formIsValid, setFormISValid] = useState(true);\n\n    const uploadImage =(e) => {\n        setFormISValid(false);\n        const image = e.target.files[0];\n        const data = new FormData();\n        data.append('file', image)\n        data.append('upload_preset', 'ese6jnd3')\n        data.append(\"cloud_name\", 'dgpwctfjt')\n        fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\",{\n            method: 'post',\n            body: data\n        }).then(resp => \n            resp.json()\n        ).then(data => {\n            setUrl(data.url);\n            setFormISValid(true);\n            if (data.url){\n                setFormISValid(true);\n            }\n        })\n    }\n    \n    \n    const input = '/categories.json';\n    useEffect(()=>{\n        const fetchCategories = async() => { \n            createRequest(input).then((data)=> {\n                console.log(data);\n                setCategoryList(data);       \n                })\n        }\n        \n        const timer = setTimeout(()=>{\n            fetchCategories();\n        }, 1000);\n        return () => clearTimeout(timer);    \n    }, [input]);\n\n    let record = props.items;\n    let defaultType = record.type_of? record.type_of : \"\";\n    let defaultDate = record.date? record.date: \"\";\n    let defaultTitle = record.title? record.title: \"\";\n    let defaultDescription = record.description? record.description : \"\";\n    let defaultFile = record.receipt? record.receipt : \"\";\n    let defaultCategory = record.category_id? record.category_id: \"\";\n\n    const submitHandler =(event) => {\n        event.preventDefault();  \n\n        // if (enteredAmount.trim()===\"\") {\n        //     setAmountIsValid(false);\n        //     return;\n        // }\n        // setAmountIsValid(true);\n        const transactionData = {\n            type_of: enteredType,\n            amount: enteredAmount, \n            title: enteredTitle,\n            description: enteredDescription,  \n            receipt: url, \n            date: enteredDate,\n            category_id: Number(enteredCategory),\n        };\n        props.onSaveTransactionData(transactionData);\n        setEnteredDescription('');\n        setEnteredAmount('');\n        setEnteredDate('');\n        setFormISValid(false);\n    }\n\n    return (\n    <div >\n    <form onSubmit={submitHandler}>\n        <Row className=\"align-items-center\">\n            <Col sm={4} className=\"my-1\">\n                <label>Income/Expense</label>\n                <Form.Select defaultValue={defaultType} value={enteredType} onChange={(e) => setEnteredType(e.target.value)} required>\n                <option value=\"\">Select Type</option>\n                <option value=\"expense\">Expense</option>\n                <option value=\"income\">Income</option>\n                </Form.Select>\n            </Col>  \n        </Row>\n        <Row className=\"align-items-center\">\n            <Col sm={3} className=\"my-1\">\n                <label>Date</label>\n                <Form.Control  defaultValue={defaultDate}type=\"date\" value={enteredDate} min=\"2021-01-01\" max={new Date()} onChange={(e)=> setEnteredDate(e.target.value)}/>\n            </Col>\n    \n            <Col sm={3} className=\"my-1\">\n                <label>Category</label>\n                <Form.Select value={enteredCategory} onChange={(e)=>setEnteredCategory(e.target.value)}>\n                {categoryList.map(category => (\n                        <option value={category.id}>&#129409; {category.name}</option>\n                ))}\n                </Form.Select>\n            </Col>\n\n            <Col sm={3} className=\"my-1\">\n                <label>Title</label>\n                <Form.Control type=\"Title\" value={enteredTitle} onChange={(e)=> setEnteredTitle(e.target.value)}/>\n            </Col>\n\n            <Col sm={2} className=\"my-1\">\n                <label>Amount</label>\n                <Form.Control defaultValue={props.items.amount}type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={(e) => setEnteredAmount(e.target.value)} placeholder=\"$\"/>\n                {/* {!amountIsValid && <p className='error-text'>Please enter an amount </p>} */}\n            </Col>\n        </Row>    \n        <Row className=\"align-items-center\">\n            <Col sm={6} className=\"my-1\">\n                <label>Description</label>\n                <Form.Control type=\"text\" value={enteredDescription} onChange={(e)=> setEnteredDescription(e.target.value)}/>\n            </Col>\n            <Col sm={3} className=\"my-1\">\n                <label>Upload</label>\n                <Form.Control type=\"file\" onChange={uploadImage}/>\n            </Col>\n        \n            <Col sm={1} className='my-1'>\n                {formIsValid &&\n                    <Button type=\"submit\">Add</Button>\n                }\n                {!formIsValid &&\n                    <Button type=\"submit\" disabled>Uploading..</Button>\n                }\n            </Col>\n            <Col sm={1} className='btn-group ml-auto'>\n                <Button type=\"button\" onClick={props.onCancel}>Cancel</Button>\n            </Col>\n            </Row>\n    </form>\n    </div>\n    );\n};\n\nexport default TransactionEdit;"]},"metadata":{},"sourceType":"module"}