{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport createRequest from '../../request';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionEdit = props => {\n  _s();\n\n  console.log(props);\n  let record = props.items;\n  let defaultType = record.type_of ? record.type_of : \"\";\n  let defaultAmount = record.amount ? record.amount : \"\";\n  let defaultDate = record.date ? new Date(record.date).toISOString().split('T')[0] : \"\";\n  let defaultTitle = record.title ? record.title : \"\";\n  let defaultDescription = record.description ? record.description : \"\";\n  let defaultFile = record.receipt ? record.receipt : \"\";\n  let defaultCategory = categoryList.map(category => {\n    if (record.category_id && category.id === record.category_id) {\n      return category.name;\n    }\n  });\n  const [enteredDescription, setEnteredDescription] = useState(defaultDescription);\n  const [enteredAmount, setEnteredAmount] = useState(defaultAmount);\n  const [enteredDate, setEnteredDate] = useState(defaultDate);\n  const [enteredTitle, setEnteredTitle] = useState(defaultTitle);\n  const [enteredType, setEnteredType] = useState(defaultType);\n  const [enteredCategory, setEnteredCategory] = useState(defaultCategory);\n  const [url, setUrl] = useState('');\n  const [categoryList, setCategoryList] = useState([]); //check validation\n\n  const [formIsValid, setFormISValid] = useState(true);\n\n  const uploadImage = e => {\n    setFormISValid(false);\n    console.log('change');\n    const image = e.target.files[0];\n    const data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'expenseTrackr');\n    data.append(\"cloud_name\", 'dgpwctfjt');\n    fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\", {\n      method: 'post',\n      body: data\n    }).then(resp => resp.json()).then(data => {\n      setUrl(data.url);\n      setFormISValid(true);\n\n      if (data.url) {\n        setFormISValid(true);\n      }\n    });\n  };\n\n  const input = '/categories.json';\n  useEffect(() => {\n    const fetchCategories = async () => {\n      createRequest(input).then(data => {\n        console.log(data);\n        setCategoryList(data);\n      });\n    };\n\n    const timer = setTimeout(() => {\n      fetchCategories();\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [input]);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (url !== defaultFile) {\n      setUrl(url);\n    } // if (enteredAmount.trim()===\"\") {\n    //     setAmountIsValid(false);\n    //     return;\n    // }\n    // setAmountIsValid(true);\n\n\n    const transactionData = {\n      type_of: enteredType,\n      amount: enteredAmount,\n      title: enteredTitle,\n      description: enteredDescription,\n      receipt: url,\n      date: enteredDate,\n      category_id: Number(enteredCategory)\n    };\n    props.onSaveTransactionData(transactionData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Income/Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            defaultValue: defaultType,\n            value: enteredType,\n            onChange: e => setEnteredType(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"expense\",\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"income\",\n              children: \"Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            defaultValue: defaultDate,\n            type: \"date\",\n            value: enteredDate,\n            min: \"2021-01-01\",\n            max: new Date(),\n            onChange: e => setEnteredDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: enteredCategory,\n            onChange: e => setEnteredCategory(e.target.value),\n            children: categoryList.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: [\"\\uD83E\\uDD81 \", category.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"Title\",\n            defaultValue: defaultTitle,\n            value: enteredTitle,\n            onChange: e => setEnteredTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            defaultValue: defaultAmount,\n            type: \"number\",\n            value: enteredAmount,\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: e => setEnteredAmount(e.target.value),\n            placeholder: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            defaultValue: defaultDescription,\n            value: enteredDescription,\n            onChange: e => setEnteredDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          className: \"my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            onChange: uploadImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 1,\n          className: \"my-1\",\n          children: [formIsValid && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), !formIsValid && /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: true,\n            children: \"Uploading..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 1,\n          className: \"btn-group ml-auto\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: props.onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionEdit, \"LiPs+yKqD9HWhYphlLA1W59x4nQ=\");\n\n_c = TransactionEdit;\nexport default TransactionEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionEdit\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionEdit.js"],"names":["React","useState","useEffect","createRequest","Row","Col","Form","Button","TransactionEdit","props","console","log","record","items","defaultType","type_of","defaultAmount","amount","defaultDate","date","Date","toISOString","split","defaultTitle","title","defaultDescription","description","defaultFile","receipt","defaultCategory","categoryList","map","category","category_id","id","name","enteredDescription","setEnteredDescription","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","enteredTitle","setEnteredTitle","enteredType","setEnteredType","enteredCategory","setEnteredCategory","url","setUrl","setCategoryList","formIsValid","setFormISValid","uploadImage","e","image","target","files","data","FormData","append","fetch","method","body","then","resp","json","input","fetchCategories","timer","setTimeout","clearTimeout","submitHandler","event","preventDefault","transactionData","Number","onSaveTransactionData","value","onCancel"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport createRequest from '../../request';\nimport {Row,Col,Form, Button} from 'react-bootstrap';\n\nconst TransactionEdit = (props)=>{\n    console.log(props);\n    let record = props.items;\n    let defaultType = record.type_of? record.type_of : \"\";\n    let defaultAmount = record.amount? record.amount : \"\";\n    \n    let defaultDate = record.date? new Date(record.date).toISOString().split('T')[0]: \"\";\n    let defaultTitle = record.title? record.title: \"\";\n    let defaultDescription = record.description? record.description : \"\";\n    let defaultFile = record.receipt? record.receipt : \"\";\n    let defaultCategory = categoryList.map((category)=> {\n        if (record.category_id && category.id === record.category_id){\n            return category.name;\n        }\n    });\n\n    const [enteredDescription, setEnteredDescription] = useState(defaultDescription);\n    const [enteredAmount, setEnteredAmount] = useState(defaultAmount);\n    const [enteredDate, setEnteredDate] = useState(defaultDate);\n    const [enteredTitle, setEnteredTitle] = useState(defaultTitle);\n    const [enteredType, setEnteredType] = useState(defaultType);\n    const [enteredCategory, setEnteredCategory]=useState(defaultCategory);\n    const [url, setUrl] = useState('');\n    const [categoryList, setCategoryList] = useState([]); \n    //check validation\n    const [formIsValid, setFormISValid] = useState(true);\n\n    const uploadImage =(e) => {\n        setFormISValid(false);\n        console.log('change');\n        const image = e.target.files[0];\n        const data = new FormData();\n        data.append('file', image)\n        data.append('upload_preset', 'expenseTrackr')\n        data.append(\"cloud_name\", 'dgpwctfjt')\n        fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\",{\n            method: 'post',\n            body: data\n        }).then(resp => \n            resp.json()\n        ).then(data => {\n            setUrl(data.url);\n            setFormISValid(true);\n            if (data.url){\n                setFormISValid(true);\n            }\n        })\n    }\n    \n    \n    const input = '/categories.json';\n    useEffect(()=>{\n        const fetchCategories = async() => { \n            createRequest(input).then((data)=> {\n                console.log(data);\n                setCategoryList(data);       \n                })\n        }\n        \n        const timer = setTimeout(()=>{\n            fetchCategories();\n        }, 500);\n        return () => clearTimeout(timer);    \n    }, [input]);\n\n\n    const submitHandler =(event) => {\n        event.preventDefault();  \n        if (url !== defaultFile) {\n            setUrl(url); \n        }\n        // if (enteredAmount.trim()===\"\") {\n        //     setAmountIsValid(false);\n        //     return;\n        // }\n        // setAmountIsValid(true);\n        const transactionData = {\n            type_of: enteredType,\n            amount: enteredAmount, \n            title: enteredTitle,\n            description: enteredDescription,  \n            receipt: url, \n            date: enteredDate,\n            category_id: Number(enteredCategory),\n        };\n        props.onSaveTransactionData(transactionData);\n\n    }\n\n    return (\n    <div >\n    <form onSubmit={submitHandler}>\n        <Row className=\"align-items-center\">\n            <Col sm={4} className=\"my-1\">\n                <label>Income/Expense</label>\n                <Form.Select defaultValue={defaultType} value={enteredType} onChange={(e) => setEnteredType(e.target.value)} required>\n                <option value=\"\">Select Type</option>\n                <option value=\"expense\">Expense</option>\n                <option value=\"income\">Income</option>\n                </Form.Select>\n            </Col>  \n        </Row>\n        <Row className=\"align-items-center\">\n            <Col sm={3} className=\"my-1\">\n                <label>Date</label>\n                <Form.Control  defaultValue={defaultDate} type=\"date\" value={enteredDate} min=\"2021-01-01\" max={new Date()} onChange={(e)=> setEnteredDate(e.target.value)}/>\n            </Col>\n    \n            <Col sm={3} className=\"my-1\">\n                <label>Category</label>\n                <Form.Select value={enteredCategory} onChange={(e)=>setEnteredCategory(e.target.value)}>\n                {categoryList.map(category => (\n                        <option value={category.id}>&#129409; {category.name}</option>\n                ))}\n                </Form.Select>\n            </Col>\n\n            <Col sm={3} className=\"my-1\">\n                <label>Title</label>\n                <Form.Control type=\"Title\" defaultValue={defaultTitle} value={enteredTitle} onChange={(e)=> setEnteredTitle(e.target.value)}/>\n            </Col>\n\n            <Col sm={2} className=\"my-1\">\n                <label>Amount</label>\n                <Form.Control defaultValue={defaultAmount} type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={(e) => setEnteredAmount(e.target.value)} placeholder=\"$\"/>\n                {/* {!amountIsValid && <p className='error-text'>Please enter an amount </p>} */}\n            </Col>\n        </Row>    \n        <Row className=\"align-items-center\">\n            <Col sm={6} className=\"my-1\">\n                <label>Description</label>\n                <Form.Control type=\"text\" defaultValue={defaultDescription}value={enteredDescription} onChange={(e)=> setEnteredDescription(e.target.value)}/>\n            </Col>\n            <Col sm={3} className=\"my-1\">\n                <label>Upload</label>\n                <Form.Control type=\"file\" onChange={uploadImage}/>\n            </Col>\n        \n            <Col sm={1} className='my-1'>\n                {formIsValid &&\n                    <Button type=\"submit\">Add</Button>\n                }\n                {!formIsValid &&\n                    <Button type=\"submit\" disabled>Uploading..</Button>\n                }\n            </Col>\n            <Col sm={1} className='btn-group ml-auto'>\n                <Button type=\"button\" onClick={props.onCancel}>Cancel</Button>\n            </Col>\n            </Row>\n    </form>\n    </div>\n    );\n};\n\nexport default TransactionEdit;"]},"metadata":{},"sourceType":"module"}