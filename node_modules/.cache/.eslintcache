[{"/Users/tingluo/Projects/Project2/expense-tracker/client/src/index.js":"1","/Users/tingluo/Projects/Project2/expense-tracker/client/src/App.js":"2","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/NewTransaction.js":"3","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionForm.js":"4","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionItem.js":"5","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionDate.js":"6","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionList.js":"7","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/Transactions.js":"8","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsFilter.js":"9","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Card.js":"10","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Category/Category.js":"11","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Navigation.js":"12","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Category/CategoryList.js":"13","/Users/tingluo/Projects/Project2/expense-tracker/client/src/request.js":"14","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsDisplay.js":"15","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/Profile.js":"16","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/ProfileUpdate.js":"17","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/ProfileView.js":"18","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/IncomeExpense.js":"19","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/Errors.js":"20","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/Changepassword.js":"21","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionEdit.js":"22","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Authentication/SignIn.js":"23","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Authentication/SignUp.js":"24"},{"size":1255,"mtime":1651621338209,"results":"25","hashOfConfig":"26"},{"size":2638,"mtime":1651621338200,"results":"27","hashOfConfig":"26"},{"size":1558,"mtime":1651621338217,"results":"28","hashOfConfig":"26"},{"size":5362,"mtime":1651552197924,"results":"29","hashOfConfig":"26"},{"size":3269,"mtime":1651621823706,"results":"30","hashOfConfig":"26"},{"size":589,"mtime":1651541158622,"results":"31","hashOfConfig":"26"},{"size":947,"mtime":1651621823701,"results":"32","hashOfConfig":"26"},{"size":1550,"mtime":1651621823701,"results":"33","hashOfConfig":"26"},{"size":1071,"mtime":1651576611602,"results":"34","hashOfConfig":"26"},{"size":204,"mtime":1651383374821,"results":"35","hashOfConfig":"26"},{"size":1130,"mtime":1651538974708,"results":"36","hashOfConfig":"26"},{"size":2622,"mtime":1651621338201,"results":"37","hashOfConfig":"26"},{"size":303,"mtime":1651538974708,"results":"38","hashOfConfig":"26"},{"size":690,"mtime":1651552062001,"results":"39","hashOfConfig":"26"},{"size":2671,"mtime":1651621823705,"results":"40","hashOfConfig":"26"},{"size":1034,"mtime":1651576611598,"results":"41","hashOfConfig":"26"},{"size":2883,"mtime":1651621338207,"results":"42","hashOfConfig":"26"},{"size":1000,"mtime":1651558796889,"results":"43","hashOfConfig":"26"},{"size":1762,"mtime":1651555337203,"results":"44","hashOfConfig":"26"},{"size":321,"mtime":1651558796888,"results":"45","hashOfConfig":"26"},{"size":2649,"mtime":1651621338202,"results":"46","hashOfConfig":"26"},{"size":6433,"mtime":1651621823700,"results":"47","hashOfConfig":"26"},{"size":2094,"mtime":1651621338200,"results":"48","hashOfConfig":"26"},{"size":3654,"mtime":1651621338201,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tfu7jq",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"59"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"59"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tingluo/Projects/Project2/expense-tracker/client/src/index.js",["128"],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/App.js",["129","130","131"],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/NewTransaction.js",[],[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionForm.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionItem.js",["132"],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionDate.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionList.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/Transactions.js",["133"],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsFilter.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Card.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Category/Category.js",["134"],[],"import React, { Component } from 'react';\nimport CategoryList from './CategoryList';\nimport createRequest from '../../request';\nimport Navigation from '../Navigation';\n\n// const SERVER_URL = 'http://localhost:3000/categories.json';\n\n\nclass Category extends Component {\n    constructor() {\n        super();\n        this.state = {\n            categories: [\n                // {id: 1, name: 'Grocery', icon: 'https://placekitten.com/50/50'}, \n                // {id: 2, name: 'Medicine', icon: 'https://placekitten.com/50/50'},\n            ]\n        };\n    }\n    \n    componentDidMount() {\n                \n        const fetchCategories = () => {\n            createRequest(\"/user_categories.json\").then((response) => {\n\n \n                this.setState({categories: response});\n\n                // setTimeout(fetchCategories, 5000);\n                console.log(response)\n            });\n        };\n        fetchCategories();\n    }\n\n    render() {\n        return (\n            <div>\n                <CategoryList categories={ this.state.categories }/>\n                hey\n            </div>\n        );\n    }\n}\n\nexport default Category;","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Navigation.js",["135"],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Category/CategoryList.js",["136"],[],"import React from 'react';\n\nconst CategoryList = (props) => {\n  return (\n    <div>\n        <p>\n            { props.categories.length } categories\n        </p>\n        { props.categories.map((c) => <p key={ c.id }>{ c.name }<img src={ c.icon } ></img></p>)}\n    </div>\n  );\n}\n\nexport default CategoryList","/Users/tingluo/Projects/Project2/expense-tracker/client/src/request.js",["137"],[],"function createRequest(url) {\n    let token = localStorage.getItem('token')\n    const instance = fetch(`http://localhost:3000${url}`, {\n        method: 'GET',\n        headers: {  \n          'Authorization': `Bearer ${token}`\n        }\n    })\n    .then(response => response.json())\n    return instance\n}\n\nfunction postRequest(url) {\n  let token = localStorage.getItem('token')\n  const instance = fetch(`http://localhost:3000${url}`, {\n      method: 'PATCH',\n      headers: {  \n        'Authorization': `Bearer ${token}`\n      }\n  })\n  .then(response => response.json())\n  return instance\n}\n\nexport default createRequest;\n\n// exemple to call the function\n//createRequest(\"/categories.json\")\n\n","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsDisplay.js",["138"],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/Profile.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/ProfileUpdate.js",["139"],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/ProfileView.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/IncomeExpense.js",["140","141"],[],"import React,{useState} from 'react';\nimport { Card , Row, Col } from 'react-bootstrap';\nconst IncomeExpense = (props) => {\n    // console.log(props);\n    let incomeAmount = 0;\n    let expenseAmount = 0;\n    if (props.items.length > 0){\n        props.items.map((transaction)=>{\n           if( transaction.type_of === 'income'){\n               incomeAmount += Number(transaction.amount);\n            //    console.log(incomeAmount);\n           }else{\n               expenseAmount += Number(transaction.amount);\n            //    console.log(expenseAmount);\n           }\n        })\n    }\n    return(\n        <Row>\n            <Col md={4}>\n                <Card bg='primary' text='white' className='mb-2'>\n                <Card.Header>Income</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        $ {incomeAmount.toFixed(2)}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n            <Col md={4}>\n                <Card bg='secondary' text='white' className='mb-2'>\n                <Card.Header>Expense</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        $ {expenseAmount.toFixed(2)}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n            <Col md={4}>\n                <Card bg='danger' text='white' className='mb-2'>\n                <Card.Header>balance</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        $ {(incomeAmount-expenseAmount).toFixed(2)}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n        </Row>\n    )\n}\n\nexport default IncomeExpense;","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/Errors.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Profile/Changepassword.js",["142","143","144"],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionEdit.js",["145"],[],"import React, {useState, useEffect} from 'react';\nimport createRequest from '../../request';\nimport {Row,Col,Form, Button} from 'react-bootstrap';\n\nconst TransactionEdit = (props)=>{\n    console.log(props);\n    const [enteredDescription, setEnteredDescription] = useState(props.description);\n    const [enteredAmount, setEnteredAmount] = useState(props.amount);\n    const [enteredDate, setEnteredDate] = useState(props.date);\n    const [enteredTitle, setEnteredTitle] = useState(props.title);\n    const [enteredType, setEnteredType] = useState(props.type);\n    const [enteredCategory, setEnteredCategory]=useState(props.category_id);\n    const [url, setUrl] = useState('');\n    const [categoryList, setCategoryList] = useState([]); \n    //check validation\n    const [formIsValid, setFormISValid] = useState(true);\n    const uploadImage =(e) => {\n        setFormISValid(false);\n        const image = e.target.files[0];\n        const data = new FormData();\n        data.append('file', image)\n        data.append('upload_preset', 'expenseTrackr')\n        data.append(\"cloud_name\", 'dgpwctfjt')\n        fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\",{\n            method: 'post',\n            body: data\n        }).then(resp => \n            resp.json()\n        ).then(data => {\n            setUrl(data.url);\n            setFormISValid(true);\n            if (data.url){\n                setFormISValid(true);\n            }\n        })\n    }\n    \n    \n    const input = '/categories.json';\n    useEffect(()=>{\n        const fetchCategories = async() => { \n            createRequest(input).then((data)=> {\n                console.log(data);\n                setCategoryList(data);       \n                })\n        }\n        \n        const timer = setTimeout(()=>{\n            fetchCategories();\n        }, 500);\n        return () => clearTimeout(timer);    \n    }, [input]);\n    let record = props.items;\n    let defaultType = record.type_of? record.type_of : \"\";\n    let defaultAmount = record.amount? record.amount : \"\";\n    let defaultUrl = record.receipt? record.receipt : \"\";\n    let defaultDate = record.date? new Date(record.date).toISOString().split('T')[0]: \"\";\n    let defaultTitle = record.title? record.title: \"\";\n    let defaultDescription = record.description? record.description : \"\";\n    let defaultFile = record.receipt? record.receipt : \"\";\n    let defaultCategory = [];\n    categoryList.map((category)=> {\n        if (record.category_id && category.id === record.category_id){\n            defaultCategory.push(category.id, category.name);\n        }\n    });\n    console.log(enteredAmount, defaultAmount);\n    console.log(url, setUrl);\n    console.log(defaultCategory);\n\n    const updateHandler =(event) => {\n        event.preventDefault();  \n        if (url !== defaultFile) {\n            setUrl(url); \n        }\n        const transactionData = {\n            type_of: enteredType? enteredType:defaultType,\n            amount: enteredAmount? enteredAmount:defaultAmount, \n            title: enteredTitle? enteredTitle:defaultTitle,\n            description: enteredDescription? enteredDescription:defaultDescription,  \n            receipt: url? url:defaultUrl, \n            date: enteredDate? enteredDate: defaultDate,\n            category_id: Number(enteredCategory)? Number(enteredCategory):defaultCategory[0],\n            id: props.id\n        };\n        props.onUpateTransactionData(transactionData);\n\n    }\n\n    return (\n    <div >\n    <form onSubmit={updateHandler}>\n        <Row className=\"align-items-center\">\n            <Col sm={4} className=\"my-1\">\n                <label>Income/Expense</label>\n                <Form.Select defaultValue={defaultType} value={enteredType} onChange={(e) => setEnteredType(e.target.value)} required>\n                <option value=\"\">Select Type</option>\n                <option value=\"expense\">Expense</option>\n                <option value=\"income\">Income</option>\n                </Form.Select>\n            </Col>  \n        </Row>\n        <Row className=\"align-items-center\">\n            <Col sm={3} className=\"my-1\">\n                <label>Date</label>\n                <Form.Control  defaultValue={defaultDate} type=\"date\" value={enteredDate} min=\"2021-01-01\" max={new Date()} onChange={(e)=> setEnteredDate(e.target.value)}/>\n            </Col>\n    \n            <Col sm={3} className=\"my-1\">\n                <label>Category</label>\n                <Form.Select defaultValue={defaultCategory[0]} value={enteredCategory} onChange={(e)=>setEnteredCategory(e.target.value)}>\n                {categoryList.map(category => (\n                        <option defaultValue={defaultCategory[0]}value={category.id}>&#129409; {category.name}</option>\n                ))}\n                </Form.Select>\n            </Col>\n\n            <Col sm={3} className=\"my-1\">\n                <label>Title</label>\n                <Form.Control type=\"Title\" defaultValue={defaultTitle} value={enteredTitle} onChange={(e)=> setEnteredTitle(e.target.value)}/>\n            </Col>\n\n            <Col sm={2} className=\"my-1\">\n                <label>Amount</label>\n                <Form.Control defaultValue={defaultAmount} type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={(e) => setEnteredAmount(e.target.value)} placeholder=\"$\"/>\n                {/* {!amountIsValid && <p className='error-text'>Please enter an amount </p>} */}\n            </Col>\n        </Row>    \n        <Row className=\"align-items-center\">\n            <Col sm={5} className=\"my-1\">\n                <label>Description</label>\n                <Form.Control type=\"text\" defaultValue={defaultDescription}value={enteredDescription} onChange={(e)=> setEnteredDescription(e.target.value)}/>\n            </Col>\n            <Col sm={3} className=\"my-1\">\n                <label>Upload</label>\n                <Form.Control type=\"file\" onChange={uploadImage}/>\n            </Col>\n        \n            <Col sm={2} className='my-1'>\n                {formIsValid &&\n                    <Button type=\"submit\">Update</Button>\n                }\n                {!formIsValid &&\n                    <Button type=\"submit\" disabled>Uploading..</Button>\n                }\n            </Col>\n            <Col sm={2} className='btn-group ml-auto'>\n                <Button type=\"button\" onClick={props.onCancel}>Cancel</Button>\n            </Col>\n            </Row>\n    </form>\n    </div>\n    );\n};\n\nexport default TransactionEdit;","/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Authentication/SignIn.js",[],[],"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Authentication/SignUp.js",[],[],{"ruleId":"146","severity":1,"message":"147","line":12,"column":8,"nodeType":"148","messageId":"149","endLine":12,"endColumn":20},{"ruleId":"146","severity":1,"message":"150","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"151","line":3,"column":18,"nodeType":"148","messageId":"149","endLine":3,"endColumn":23},{"ruleId":"146","severity":1,"message":"152","line":3,"column":25,"nodeType":"148","messageId":"149","endLine":3,"endColumn":29},{"ruleId":null,"fatal":true,"severity":2,"message":"153","line":37,"column":1},{"ruleId":"146","severity":1,"message":"154","line":6,"column":8,"nodeType":"148","messageId":"149","endLine":6,"endColumn":21},{"ruleId":"146","severity":1,"message":"155","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":18},{"ruleId":"146","severity":1,"message":"156","line":7,"column":12,"nodeType":"148","messageId":"149","endLine":7,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":9,"column":65,"nodeType":"159","endLine":9,"endColumn":86},{"ruleId":"146","severity":1,"message":"160","line":13,"column":10,"nodeType":"148","messageId":"149","endLine":13,"endColumn":21},{"ruleId":null,"fatal":true,"severity":2,"message":"161","line":69,"column":1},{"ruleId":"146","severity":1,"message":"162","line":6,"column":7,"nodeType":"148","messageId":"149","endLine":6,"endColumn":17},{"ruleId":"146","severity":1,"message":"163","line":1,"column":15,"nodeType":"148","messageId":"149","endLine":1,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":8,"column":38,"nodeType":"166","messageId":"167","endLine":8,"endColumn":40},{"ruleId":"146","severity":1,"message":"168","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":18},{"ruleId":"146","severity":1,"message":"169","line":4,"column":8,"nodeType":"148","messageId":"149","endLine":4,"endColumn":14},{"ruleId":"146","severity":1,"message":"170","line":15,"column":12,"nodeType":"148","messageId":"149","endLine":15,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":62,"column":32,"nodeType":"166","messageId":"167","endLine":62,"endColumn":34},"no-unused-vars","'Transactions' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","Parsing error: Unexpected token (37:1)","'createRequest' is defined but never used.","'Navigation' is defined but never used.","'userDetails' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'postRequest' is defined but never used.","Parsing error: Unexpected token (69:1)","'emailState' is assigned a value but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Navigate' is defined but never used.","'Errors' is defined but never used.","'errors' is assigned a value but never used."]