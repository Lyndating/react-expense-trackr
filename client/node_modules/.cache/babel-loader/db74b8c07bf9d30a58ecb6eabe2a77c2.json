{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/Transactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TransactionList from './TransactionList';\nimport TransactionsFilter from './TransactionsFilter';\nimport Card from '../Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transactions = props => {\n  _s();\n\n  const current = new Date();\n  const currentMonth = current.getMonth();\n  const [filteredMonth, setFilteredMonth] = useState(currentMonth);\n\n  const filterChangeHandler = selectedData => {\n    setFilteredMonth(selectedData);\n  };\n\n  const filteredTransactions = props.items.filter(transaction => {\n    return transaction.date.getMonth().toString === filteredMonth;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"Transactions\",\n      children: [/*#__PURE__*/_jsxDEV(TransactionsFilter, {\n        selected: filteredMonth,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n        items: filteredTransactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Transactions, \"DrkGpaki0pgMNaVhnLf46mxYwzA=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/Transactions.js"],"names":["React","useState","TransactionList","TransactionsFilter","Card","Transactions","props","current","Date","currentMonth","getMonth","filteredMonth","setFilteredMonth","filterChangeHandler","selectedData","filteredTransactions","items","filter","transaction","date","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;AACA,QAAMC,YAAY,GAAGF,OAAO,CAACG,QAAR,EAArB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAACQ,YAAD,CAAlD;;AAEA,QAAMI,mBAAmB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,gBAAgB,CAACE,YAAD,CAAhB;AACH,GAFD;;AAIA,QAAMC,oBAAoB,GAAGT,KAAK,CAACU,KAAN,CAAYC,MAAZ,CAAoBC,WAAD,IAAiB;AAC7D,WAAQA,WAAW,CAACC,IAAZ,CAAiBT,QAAjB,GAA4BU,QAA5B,KAAuCT,aAA/C;AACH,GAF4B,CAA7B;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACE,QAAC,kBAAD;AACE,QAAA,QAAQ,EAAEA,aADZ;AAEE,QAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzBH;;GAAMV,Y;;KAAAA,Y;AA2BJ,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport TransactionList from './TransactionList';\nimport TransactionsFilter from './TransactionsFilter';\nimport Card from '../Card'\n\n\nconst Transactions = (props) => {\n    const current = new Date();\n    const currentMonth = current.getMonth();\n    const [filteredMonth, setFilteredMonth] = useState(currentMonth);\n  \n    const filterChangeHandler = (selectedData) => {\n        setFilteredMonth(selectedData);\n    };\n  \n    const filteredTransactions = props.items.filter((transaction) => {\n        return  transaction.date.getMonth().toString===filteredMonth;\n    });\n  \n    return (\n      <div>\n        <Card className='Transactions'>\n          <TransactionsFilter\n            selected={filteredMonth}\n            onChangeFilter={filterChangeHandler}\n          />\n\n          <TransactionList items={filteredTransactions} />\n        </Card>\n      </div>\n    );\n  };\n  \n  export default Transactions;\n\n\n"]},"metadata":{},"sourceType":"module"}