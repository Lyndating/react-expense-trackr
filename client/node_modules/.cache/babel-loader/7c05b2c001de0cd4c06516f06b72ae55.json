{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/IncomeExpense.js\";\nimport React, { useState } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IncomeExpense = props => {\n  console.log(props);\n  let incomeAmount = 0;\n  let expenseAmount = 0;\n  let balance = incomeAmount - expenseAmount;\n\n  if (props.items.length > 0) {\n    props.items.map(transaction => {\n      if (transaction.type_of === 'income') {\n        incomeAmount += Number(transaction.amount);\n        console.log(incomeAmount);\n      } else {\n        expenseAmount += Number(transaction.amount);\n        console.log(expenseAmount, balance);\n      }\n    });\n  }\n\n  console.log(balance);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"primary\",\n        text: \"white\",\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: incomeAmount.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"secondary\",\n        text: \"white\",\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: expenseAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"danger\",\n        text: \"white\",\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = IncomeExpense;\nexport default IncomeExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"IncomeExpense\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/IncomeExpense.js"],"names":["React","useState","Card","Row","Col","IncomeExpense","props","console","log","incomeAmount","expenseAmount","balance","items","length","map","transaction","type_of","Number","amount","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,IAAT,EAAgBC,GAAhB,EAAqBC,GAArB,QAAgC,iBAAhC;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,YAAY,GAAG,CAAnB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAIC,OAAO,GAAGF,YAAY,GAAGC,aAA7B;;AACA,MAAIJ,KAAK,CAACM,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA2B;AACvBP,IAAAA,KAAK,CAACM,KAAN,CAAYE,GAAZ,CAAiBC,WAAD,IAAe;AAC5B,UAAIA,WAAW,CAACC,OAAZ,KAAwB,QAA5B,EAAqC;AACjCP,QAAAA,YAAY,IAAIQ,MAAM,CAACF,WAAW,CAACG,MAAb,CAAtB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACH,OAHD,MAGK;AACDC,QAAAA,aAAa,IAAIO,MAAM,CAACF,WAAW,CAACG,MAAb,CAAvB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYE,aAAZ,EAA2BC,OAA3B;AACH;AACH,KARD;AASH;;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ;AACA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,SAAS,EAAC,MAA1C;AAAA,gCACA,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACKF,YAAY,CAACU,OAAb,CAAqB,CAArB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,SAAS,EAAC,MAA5C;AAAA,gCACA,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACKT;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAqBI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAA,gCACA,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACKC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CAnDD;;KAAMN,a;AAqDN,eAAeA,aAAf","sourcesContent":["import React,{useState} from 'react';\nimport { Card , Row, Col } from 'react-bootstrap';\nconst IncomeExpense = (props) => {\n    console.log(props);\n    let incomeAmount = 0;\n    let expenseAmount = 0;\n    let balance = incomeAmount - expenseAmount;\n    if (props.items.length > 0){\n        props.items.map((transaction)=>{\n           if( transaction.type_of === 'income'){\n               incomeAmount += Number(transaction.amount);\n               console.log(incomeAmount);\n           }else{\n               expenseAmount += Number(transaction.amount);\n               console.log(expenseAmount, balance);\n           }\n        })\n    }\n    console.log(balance);\n    return(\n        <Row>\n            <Col md={4}>\n                <Card bg='primary' text='white' className='mb-2'>\n                <Card.Header>Income</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        {incomeAmount.toFixed(2)}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n            <Col md={4}>\n                <Card bg='secondary' text='white' className='mb-2'>\n                <Card.Header>Expense</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        {expenseAmount}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n            <Col md={4}>\n                <Card bg='danger' text='white' className='mb-2'>\n                <Card.Header>balance</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        {balance}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n        </Row>\n    )\n}\n\nexport default IncomeExpense;"]},"metadata":{},"sourceType":"module"}