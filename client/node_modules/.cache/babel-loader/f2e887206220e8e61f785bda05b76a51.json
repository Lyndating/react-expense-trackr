{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport createRequest from '../../request'; // import {CloudinaryContext} from 'cloudinary-react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionForm = props => {\n  _s();\n\n  console.log(props);\n  const [enteredDescription, setEnteredDescription] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredType, setEnteredType] = useState('Expense');\n  const [enteredCategory, setEnteredCategory] = useState('');\n  const [image, setImage] = useState('');\n  const [url, setUrl] = useState('');\n  const [categoryList, setCategoryList] = useState(''); //check validation\n\n  const [amountIsValid, setAmountIsValid] = useState(true);\n\n  const uploadImage = () => {\n    const data = new FormData();\n    data.append('file', image);\n    data.append('upload_preset', 'ese6jnd3');\n    data.append(\"cloud_name\", 'dgpwctfjt');\n    fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\", {\n      method: 'post',\n      body: data\n    }).then(resp => resp.json()).then(data => {\n      setUrl(data.url);\n      console.log(data.url);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const input = '/categories.json';\n      createRequest().get(input).then(reps => {\n        setCategoryList(reps.data);\n        console.log(reps.data);\n        setTimeout(fetchCategories, 5000);\n      });\n      console.log(categoryList);\n      fetchCategories();\n    };\n  });\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (enteredAmount.trim() === \"\") {\n      setAmountIsValid(false);\n      return;\n    }\n\n    setAmountIsValid(true);\n    const transactionData = {\n      transactions: [{\n        type_of: enteredType,\n        amount: enteredAmount,\n        title: enteredTitle,\n        description: enteredDescription,\n        receipt: url,\n        date: enteredDate,\n        category_id: Number(enteredCategory)\n      }]\n    };\n    props.onSaveTransactionData(transactionData);\n    setEnteredDescription('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: enteredCategory,\n          onChange: e => setEnteredCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2021-01-01\",\n          max: \"2025-12-31\",\n          onChange: e => setEnteredDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Income/Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: enteredType,\n          onChange: e => setEnteredType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"expense\",\n            children: \"Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"income\",\n            children: \"Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"Title\",\n          value: enteredTitle,\n          onChange: e => setEnteredTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: e => setEnteredAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Please enter an amount \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: enteredDescription,\n          onChange: e => setEnteredDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 2,\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          onChange: e => setImage(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        className: \"my-1\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: uploadImage,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: props.onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionForm, \"PbrtXzaqDUgrVBb+jxEQxc5jbXY=\");\n\n_c = TransactionForm;\nexport default TransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionForm.js"],"names":["axios","React","useState","useEffect","Form","Row","Col","Button","createRequest","TransactionForm","props","console","log","enteredDescription","setEnteredDescription","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","enteredTitle","setEnteredTitle","enteredType","setEnteredType","enteredCategory","setEnteredCategory","image","setImage","url","setUrl","categoryList","setCategoryList","amountIsValid","setAmountIsValid","uploadImage","data","FormData","append","fetch","method","body","then","resp","json","catch","err","fetchCategories","input","get","reps","setTimeout","submitHandler","event","preventDefault","trim","transactionData","transactions","type_of","amount","title","description","receipt","date","category_id","Number","onSaveTransactionData","e","target","value","files","onCancel"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport { Form , Row, Col, Button } from 'react-bootstrap';\nimport createRequest from '../../request';\n// import {CloudinaryContext} from 'cloudinary-react';\n\n\nconst TransactionForm = (props)=>{\n    console.log(props);\n    const [enteredDescription, setEnteredDescription] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredType, setEnteredType] = useState('Expense');\n    const [enteredCategory, setEnteredCategory]=useState('');\n    const [image, setImage] = useState('');\n    const [url, setUrl] = useState('');\n    const [categoryList, setCategoryList] = useState(''); \n    //check validation\n    const [amountIsValid, setAmountIsValid] = useState(true);\n\n    const uploadImage =() => {\n        const data = new FormData();\n        data.append('file', image)\n        data.append('upload_preset', 'ese6jnd3')\n        data.append(\"cloud_name\", 'dgpwctfjt')\n        fetch(\"https://api.cloudinary.com/v1_1/dgpwctfjt/image/upload\",{\n            method: 'post',\n            body: data\n        }).then(resp => \n            resp.json()\n        ).then(data => {\n            setUrl(data.url);\n            console.log(data.url);\n        }).catch(err => console.log(err))\n    }\n    \n    useEffect(()=>{\n        const fetchCategories = async() => {\n            const input = '/categories.json';\n            createRequest().get(input).then(reps=>{\n                setCategoryList(reps.data);       \n                console.log(reps.data);\n                setTimeout(fetchCategories, 5000);\n            })\n        console.log(categoryList);\n        fetchCategories();\n    }});\n\n    \n\n    const submitHandler =(event) => {\n        event.preventDefault();  \n\n        if (enteredAmount.trim()===\"\") {\n            setAmountIsValid(false);\n            return;\n        }\n        setAmountIsValid(true);\n\n        const transactionData = {\n            transactions:[{\n            type_of: enteredType,\n            amount: enteredAmount, \n            title: enteredTitle,\n            description: enteredDescription,  \n            receipt: url, \n            date: enteredDate,\n            category_id: Number(enteredCategory),\n            }],\n        };\n        props.onSaveTransactionData(transactionData);\n        setEnteredDescription('');\n        setEnteredAmount('');\n        setEnteredDate('');\n    }\n\n    return (\n    <form onSubmit={submitHandler}>\n        <Row className=\"align-items-center\">\n            <Col sm={2} className=\"my-1\">\n                <label>Category</label>\n                <Form.Select value={enteredCategory} onChange={(e)=>setEnteredCategory(e.target.value)}>\n                    {/* {categoryList.map(category => {\n                        return (\n                            <option value={category.id}>{category.icon}{category.name}</option>\n                        )\n                    })} */}\n                </Form.Select>\n            </Col>\n        </Row>\n        <Row className=\"align-items-center\">\n            <Col sm={2} className=\"my-1\">\n                <label>Date</label>\n                <Form.Control  type=\"date\" value={enteredDate} min=\"2021-01-01\" max=\"2025-12-31\" onChange={(e)=> setEnteredDate(e.target.value)}/>\n            </Col>\n    \n            <Col sm={2} className=\"my-1\">\n                <label>Income/Expense</label>\n                <Form.Select value={enteredType} onChange={(e) => setEnteredType(e.target.value)} required>\n                <option value=\"\">Select Type</option>\n                <option value=\"expense\">Expense</option>\n                <option value=\"income\">Income</option>\n                </Form.Select>\n            </Col>  \n\n            <Col sm={2} className=\"my-1\">\n                <label>Title</label>\n                <Form.Control type=\"Title\" value={enteredTitle} onChange={(e)=> setEnteredTitle(e.target.value)}/>\n            </Col>\n\n            <Col sm={2} className=\"my-1\">\n                <label>Amount</label>\n                <Form.Control type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={(e) => setEnteredAmount(e.target.value)}/>\n                {!amountIsValid && <p className='error-text'>Please enter an amount </p>}\n            </Col>\n\n            <Col sm={2} className=\"my-1\">\n                <label>Description</label>\n                <Form.Control type=\"text\" value={enteredDescription} onChange={(e)=> setEnteredDescription(e.target.value)}/>\n            </Col>\n            <Col sm={2} className=\"my-1\">\n                <label>Upload</label>\n                <Form.Control type=\"file\" onChange={(e)=> setImage(e.target.files[0])}/>\n            </Col>\n\n            <Col xs=\"auto\" className='my-1'>\n                <Button type=\"submit\" onClick={uploadImage}>Add</Button>\n                <Button type=\"button\" onClick={props.onCancel}>Cancel</Button>\n            </Col>\n            </Row>\n    </form>\n    );\n};\n\nexport default TransactionForm;"]},"metadata":{},"sourceType":"module"}