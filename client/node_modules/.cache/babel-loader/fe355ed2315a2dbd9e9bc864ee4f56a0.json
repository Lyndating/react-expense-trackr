{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NewTransaction from './NewTransaction';\nimport Transactions from './Transactions';\nimport Navigation from '../Navigation';\nimport createRequest from '../../request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionsDisplay = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState();\n  const input = '/transactions.json';\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      createRequest(input).then(data => {\n        console.log(data);\n        setTransactions(data);\n      });\n    };\n\n    const timer = setTimeout(() => {\n      fetchTransactions();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [input]);\n\n  const addTransactionHandler = transaction => {\n    setTransactions(prevTransactions => {\n      return [transaction, ...prevTransactions];\n    });\n  };\n\n  console.log(transactions);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewTransaction, {\n      onAddTransaction: addTransactionHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Transactions, {\n      items: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionsDisplay, \"0dAlvC3beELaRh2kS6ENpnkOG3g=\");\n\n_c = TransactionsDisplay;\nexport default TransactionsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsDisplay\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsDisplay.js"],"names":["React","useState","useEffect","NewTransaction","Transactions","Navigation","createRequest","TransactionsDisplay","transactions","setTransactions","input","fetchTransactions","then","data","console","log","timer","setTimeout","clearTimeout","addTransactionHandler","transaction","prevTransactions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,aAAP,MAA0B,eAA1B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AAGA,QAAMS,KAAK,GAAG,oBAAd;AACAR,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMS,iBAAiB,GAAG,YAAW;AACjCL,MAAAA,aAAa,CAACI,KAAD,CAAb,CAAqBE,IAArB,CAA2BC,IAAD,IAAS;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,QAAAA,eAAe,CAACI,IAAD,CAAf;AACH,OAHD;AAIH,KALD;;AAMA,UAAMG,KAAK,GAAGC,UAAU,CAAC,MAAI;AACzBN,MAAAA,iBAAiB;AACpB,KAFuB,EAErB,IAFqB,CAAxB;AAGA,WAAO,MAAMO,YAAY,CAACF,KAAD,CAAzB;AACH,GAXQ,EAWN,CAACN,KAAD,CAXM,CAAT;;AAcA,QAAMS,qBAAqB,GAAIC,WAAD,IAAiB;AAC3CX,IAAAA,eAAe,CAAEY,gBAAD,IAAsB;AACpC,aAAO,CAACD,WAAD,EAAc,GAAGC,gBAAjB,CAAP;AACD,KAFc,CAAf;AAGH,GAJD;;AAKAP,EAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,gBAAgB,EAAEW;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEX;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjCD;;GAAMD,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport NewTransaction from './NewTransaction';\nimport Transactions from './Transactions';\nimport Navigation from '../Navigation';\nimport createRequest from '../../request';\n\nconst TransactionsDisplay = () => {\n    const [transactions, setTransactions] = useState();\n\n\n    const input = '/transactions.json';\n    useEffect(()=>{\n        const fetchTransactions = async() => { \n            createRequest(input).then((data)=> {\n                console.log(data);\n                setTransactions(data);       \n            })\n        }   \n        const timer = setTimeout(()=>{\n            fetchTransactions();\n        }, 1000);\n        return () => clearTimeout(timer);    \n    }, [input]);\n\n    \n    const addTransactionHandler = (transaction) => {\n        setTransactions((prevTransactions) => {\n          return [transaction, ...prevTransactions];\n        });\n    };\n    console.log(transactions);\n    return (\n        <div>\n            <Navigation />\n            <NewTransaction onAddTransaction={addTransactionHandler}/>\n            <Transactions items={transactions}/>\n        </div>\n    )\n\n}\n\nexport default TransactionsDisplay;"]},"metadata":{},"sourceType":"module"}