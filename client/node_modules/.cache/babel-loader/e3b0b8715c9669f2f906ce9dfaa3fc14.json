{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/NewTransaction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TransactionForm from './TransactionForm';\nimport './NewTransaction.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTransaction = props => {\n  _s();\n\n  console.log(props);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    let token = localStorage.getItem('token');\n\n    if (token) {\n      fetch('http://localhost:3000/profile', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(result => {\n        if (result.id) {\n          setUser(result);\n        }\n      });\n    }\n  }, []);\n  const TRANSACTION_SERVER_URL = \"http://localhost:3000/transactions.json\";\n\n  const saveTransactionDataHandler = transactionData => {\n    setIsEditing(false);\n    console.log(transactionData);\n    axios.post(TRANSACTION_SERVER_URL, transactionData).then(reps => {\n      props.onAddTransaction(transactionData);\n    });\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-transaction\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onSaveTransactionData: saveTransactionDataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTransaction, \"NMwrZ8atdcxOCK3DsL6hY1CdlTU=\");\n\n_c = NewTransaction;\nexport default NewTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransaction\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/NewTransaction.js"],"names":["React","useState","TransactionForm","axios","NewTransaction","props","console","log","isEditing","setIsEditing","useEffect","token","localStorage","getItem","fetch","method","headers","then","response","json","result","id","setUser","TRANSACTION_SERVER_URL","saveTransactionDataHandler","transactionData","post","reps","onAddTransaction","startEditingHandler","stopEditingHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEAS,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,QAAIF,KAAJ,EAAW;AACTG,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,KAD6B;AAErCC,QAAAA,OAAO,EAAE;AACP,2BAAkB,UAASL,KAAM;AAD1B;AAF4B,OAAlC,CAAL,CAMCM,IAND,CAMMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANlB,EAOCF,IAPD,CAOMG,MAAM,IAAI;AACd,YAAIA,MAAM,CAACC,EAAX,EAAe;AACbC,UAAAA,OAAO,CAACF,MAAD,CAAP;AACD;AACF,OAXD;AAYD;AACF,GAhBM,EAgBJ,EAhBI,CAAT;AAkBA,QAAMG,sBAAsB,GAAG,yCAA/B;;AAEA,QAAMC,0BAA0B,GAAIC,eAAD,IAAqB;AACpDhB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYkB,eAAZ;AACAtB,IAAAA,KAAK,CAACuB,IAAN,CAAWH,sBAAX,EAAmCE,eAAnC,EAAoDR,IAApD,CAA0DU,IAAD,IAAQ;AAC7DtB,MAAAA,KAAK,CAACuB,gBAAN,CAAuBH,eAAvB;AACH,KAFD;AAGH,GAND;;AAQA,QAAMI,mBAAmB,GAAG,MAAM;AAC9BpB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAMqB,kBAAkB,GAAE,MAAM;AAC5BrB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,eACK,CAACD,SAAD,iBACG;AAAQ,MAAA,OAAO,EAAEqB,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAIKrB,SAAS,iBACN,QAAC,eAAD;AACI,MAAA,qBAAqB,EAAEgB,0BAD3B;AAEI,MAAA,QAAQ,EAAEM;AAFd;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArDD;;GAAM1B,c;;KAAAA,c;AAuDN,eAAeA,cAAf","sourcesContent":["import React, {useState} from 'react';\nimport TransactionForm from './TransactionForm';\nimport './NewTransaction.css';\nimport axios from 'axios';\n\nconst NewTransaction = (props) => {\n    console.log(props);\n    const [isEditing, setIsEditing] = useState(false);\n\n    useEffect(() => {\n        let token = localStorage.getItem('token')\n        if (token) {\n          fetch('http://localhost:3000/profile', {\n            method: 'GET',\n            headers: {  \n              'Authorization': `Bearer ${token}`\n            }\n          })\n          .then(response => response.json())\n          .then(result => {\n            if (result.id) {\n              setUser(result)\n            }\n          })\n        }\n      }, []);\n\n    const TRANSACTION_SERVER_URL = \"http://localhost:3000/transactions.json\";\n\n    const saveTransactionDataHandler = (transactionData) => {\n        setIsEditing(false);\n        console.log(transactionData);\n        axios.post(TRANSACTION_SERVER_URL, transactionData).then((reps)=>{\n            props.onAddTransaction(transactionData);\n        });\n    }\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    }\n\n    const stopEditingHandler =() => {\n        setIsEditing(false);    \n    }\n\n  return (\n    <div className='new-transaction'>\n        {!isEditing && (\n            <button onClick={startEditingHandler}>Add New Expense</button>\n        )}\n        {isEditing && (\n            <TransactionForm \n                onSaveTransactionData={saveTransactionDataHandler} \n                onCancel={stopEditingHandler}\n            />\n        )} \n    </div>\n  );\n};\n\nexport default NewTransaction;"]},"metadata":{},"sourceType":"module"}