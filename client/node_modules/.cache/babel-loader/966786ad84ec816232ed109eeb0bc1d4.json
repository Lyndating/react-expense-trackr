{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/IncomeExpense.js\";\nimport React, { useState } from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IncomeExpense = props => {\n  console.log(props);\n  const incomeAmount = 0;\n  const balance = incomeAmount - expenseAmount;\n\n  if (props.items.length > 0) {\n    props.items.map(transaction => {\n      if (transaction.type_of === 'income') {}\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"primary\",\n        text: \"white\",\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: incomeAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"secondary\",\n        text: \"white\",\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: expenseAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"danger\",\n        text: \"white\",\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = IncomeExpense;\nexport default IncomeExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"IncomeExpense\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/IncomeExpense.js"],"names":["React","useState","Card","Row","Col","IncomeExpense","props","console","log","incomeAmount","balance","expenseAmount","items","length","map","transaction","type_of"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,IAAT,EAAgBC,GAAhB,EAAqBC,GAArB,QAAgC,iBAAhC;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,YAAY,GAAG,CAArB;AACA,QAAMC,OAAO,GAAGD,YAAY,GAAGE,aAA/B;;AACA,MAAIL,KAAK,CAACM,KAAN,CAAYC,MAAZ,GAAqB,CAAzB,EAA2B;AACvBP,IAAAA,KAAK,CAACM,KAAN,CAAYE,GAAZ,CAAiBC,WAAD,IAAe;AAC5B,UAAIA,WAAW,CAACC,OAAZ,KAAwB,QAA5B,EAAqC,CAEpC;AACH,KAJD;AAKH;;AACD,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAgC,QAAA,SAAS,EAAC,MAA1C;AAAA,gCACA,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACKP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,SAAS,EAAC,MAA5C;AAAA,gCACA,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACKE;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ,eAqBI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAA,gCACA,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,iCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sBACKD;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA7CD;;KAAML,a;AA+CN,eAAeA,aAAf","sourcesContent":["import React,{useState} from 'react';\nimport { Card , Row, Col } from 'react-bootstrap';\nconst IncomeExpense = (props) => {\n    console.log(props);\n    const incomeAmount = 0\n    const balance = incomeAmount - expenseAmount;\n    if (props.items.length > 0){\n        props.items.map((transaction)=>{\n           if( transaction.type_of === 'income'){\n               \n           }\n        })\n    }\n    return(\n        <Row>\n            <Col md={4}>\n                <Card bg='primary' text='white' className='mb-2'>\n                <Card.Header>Income</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        {incomeAmount}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n            <Col md={4}>\n                <Card bg='secondary' text='white' className='mb-2'>\n                <Card.Header>Expense</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        {expenseAmount}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n            <Col md={4}>\n                <Card bg='danger' text='white' className='mb-2'>\n                <Card.Header>balance</Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                        {balance}\n                    </Card.Text>\n                </Card.Body>\n                </Card>\n            </Col> \n        </Row>\n    )\n}\n\nexport default IncomeExpense;"]},"metadata":{},"sourceType":"module"}