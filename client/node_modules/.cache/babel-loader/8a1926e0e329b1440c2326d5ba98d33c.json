{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Category from './components/Category';\nimport NewTransaction from './components/Transaction/NewTransaction';\nimport Transactions from './components/Transaction/Transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n\n  function signUp(user) {\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: user.email,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          password: user.password,\n          password_confirmation: user.password_confirmation\n        }\n      })\n    }).then(response => response.json()).then(returnedUser => setUser(returnedUser));\n  }\n\n  function signIn(user) {\n    fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: user.email,\n          password: user.password\n        }\n      })\n    }).then(response => response.json()).then(result => {\n      if (result.token) {\n        localStorage.setItem('token', result.token);\n        setUser(result.user);\n      } else {\n        setError(result.error);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [console.log(user), user.email ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", user.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SignIn, {\n        signIn: signIn,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n        signUp: signUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WJr4xo70Te1sV0+MLldHas1Ac/c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/App.js"],"names":["useState","useEffect","SignUp","SignIn","Category","NewTransaction","Transactions","App","user","setUser","error","setError","signUp","fetch","method","headers","body","JSON","stringify","email","first_name","last_name","password","password_confirmation","then","response","json","returnedUser","signIn","result","token","localStorage","setItem","console","log"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASY,MAAT,CAAiBJ,IAAjB,EAAuB;AACrBK,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAF0B;AAMnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,QAAAA,IAAI,EAAE;AACJW,UAAAA,KAAK,EAAEX,IAAI,CAACW,KADR;AAEJC,UAAAA,UAAU,EAAEZ,IAAI,CAACY,UAFb;AAGJC,UAAAA,SAAS,EAAEb,IAAI,CAACa,SAHZ;AAIJC,UAAAA,QAAQ,EAAEd,IAAI,CAACc,QAJX;AAKJC,UAAAA,qBAAqB,EAAEf,IAAI,CAACe;AALxB;AADa,OAAf;AAN6B,KAAhC,CAAL,CAgBCC,IAhBD,CAgBMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAhBlB,EAiBCF,IAjBD,CAiBMG,YAAY,IAAIlB,OAAO,CAACkB,YAAD,CAjB7B;AAkBD;;AAED,WAASC,MAAT,CAAiBpB,IAAjB,EAAuB;AACrBK,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAF0B;AAMnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBV,QAAAA,IAAI,EAAE;AACJW,UAAAA,KAAK,EAAEX,IAAI,CAACW,KADR;AAEJG,UAAAA,QAAQ,EAAEd,IAAI,CAACc;AAFX;AADa,OAAf;AAN6B,KAAhC,CAAL,CAaCE,IAbD,CAaMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAblB,EAcCF,IAdD,CAcMK,MAAM,IAAI;AACd,UAAIA,MAAM,CAACC,KAAX,EAAkB;AAChBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACC,KAArC;AACArB,QAAAA,OAAO,CAACoB,MAAM,CAACrB,IAAR,CAAP;AACD,OAHD,MAGO;AACLG,QAAAA,QAAQ,CAACkB,MAAM,CAACnB,KAAR,CAAR;AACD;AACF,KArBD;AAsBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eAEGuB,OAAO,CAACC,GAAR,CAAY1B,IAAZ,CAFH,EAIGA,IAAI,CAACW,KAAL,gBAAa;AAAA,8BAAcX,IAAI,CAACY,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb,gBAEC;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEQ,MAAhB;AAAwB,QAAA,KAAK,EAAElB;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAnEQL,G;;KAAAA,G;AAoET,eAAeA,GAAf","sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport './App.css';\n\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Category from './components/Category';\nimport NewTransaction from './components/Transaction/NewTransaction';\nimport Transactions from './components/Transaction/Transactions';\n\nfunction App() {\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n\n  function signUp (user) {\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: user.email,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          password: user.password,\n          password_confirmation: user.password_confirmation\n        }\n      })\n    })\n    .then(response => response.json())\n    .then(returnedUser => setUser(returnedUser))\n  }\n\n  function signIn (user) {\n    fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          email: user.email,\n          password: user.password\n        }\n      })\n    })\n    .then(response => response.json())\n    .then(result => {\n      if (result.token) {\n        localStorage.setItem('token', result.token)\n        setUser(result.user)\n      } else {\n        setError(result.error)\n      }\n    })\n  }\n\n  return (\n    <div className=\"App\">\n\n      {console.log(user)}\n\n      {user.email ? <h2>Welcome, {user.first_name}</h2> :\n      (\n        <>\n          <SignIn signIn={signIn} error={error} />\n          <SignUp signUp={signUp} />\n        </>\n      )\n      }\n      \n      {/* <Category /> */}\n    </div>\n);\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}