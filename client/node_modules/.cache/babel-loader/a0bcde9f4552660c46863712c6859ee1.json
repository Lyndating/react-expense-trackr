{"ast":null,"code":"var _jsxFileName = \"/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport NewTransaction from './NewTransaction';\nimport Transactions from './Transactions';\nimport createRequest from '../../request';\nimport TransactionItem from './TransactionItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransactionsDisplay = () => {\n  _s();\n\n  const [transactions, setTransactions] = useState([]); // const input = '/transactions.json';\n  // useEffect(()=>{\n  //     const fetchTransactions = async() => { \n  //         createRequest(input).then((data)=> {\n  //             console.log(data);\n  //             setTransactions(data);       \n  //         })\n  //     }   \n  //     const timer = setTimeout(()=>{\n  //         fetchTransactions();\n  //     }, 1000);\n  //     return () => clearTimeout(timer);    \n  // }, [input]);\n\n  useEffect(() => {\n    const fetchTransactions = () => {\n      createRequest('/transactions.json').then(result => {\n        setTransactions(result);\n      });\n    }; // const timer = setTimeout(()=>{\n\n\n    fetchTransactions(); // }, 1000);\n    // return () => clearTimeout(timer);    \n  }, []);\n\n  const addTransactionHandler = transaction => {\n    setTransactions(prevTransactions => {\n      return [transaction, ...prevTransactions];\n    });\n  };\n\n  const deleteTransactionHandler = deletedId => {\n    setTransactions(prevTransactions => {\n      const delelteTransaction = prevTransactions.filter(function (transaction) {\n        return transaction.id != deletedId;\n      });\n      return delelteTransaction;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewTransaction, {\n      onAddTransaction: addTransactionHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Transactions, {\n      items: transactions,\n      onDeleteTransaction: deleteTransactionHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionsDisplay, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsDisplay;\nexport default TransactionsDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsDisplay\");","map":{"version":3,"sources":["/Users/tingluo/Projects/Project2/expense-tracker/client/src/components/Transaction/TransactionsDisplay.js"],"names":["React","useState","useEffect","NewTransaction","Transactions","createRequest","TransactionItem","TransactionsDisplay","transactions","setTransactions","fetchTransactions","then","result","addTransactionHandler","transaction","prevTransactions","deleteTransactionHandler","deletedId","delelteTransaction","filter","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD,CAD8B,CAI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,iBAAiB,GAAG,MAAM;AAC5BL,MAAAA,aAAa,CAAC,oBAAD,CAAb,CACCM,IADD,CACMC,MAAM,IAAI;AACZH,QAAAA,eAAe,CAACG,MAAD,CAAf;AACH,OAHD;AAIH,KALD,CADY,CAOZ;;;AACIF,IAAAA,iBAAiB,GART,CASZ;AACA;AACH,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMG,qBAAqB,GAAIC,WAAD,IAAiB;AAC3CL,IAAAA,eAAe,CAAEM,gBAAD,IAAsB;AACpC,aAAO,CAACD,WAAD,EAAc,GAAGC,gBAAjB,CAAP;AACD,KAFc,CAAf;AAGH,GAJD;;AAMA,QAAMC,wBAAwB,GAAIC,SAAD,IAAe;AAC5CR,IAAAA,eAAe,CAAEM,gBAAD,IAAsB;AAClC,YAAMG,kBAAkB,GAAGH,gBAAgB,CAACI,MAAjB,CAAwB,UAAUL,WAAV,EAAuB;AACtE,eAAOA,WAAW,CAACM,EAAZ,IAAkBH,SAAzB;AACH,OAF0B,CAA3B;AAGA,aAAOC,kBAAP;AACH,KALc,CAAf;AAMH,GAPD;;AASA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,gBAAgB,EAAEL;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEL,YAArB;AAAmC,MAAA,mBAAmB,EAAEQ;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArDD;;GAAMT,mB;;KAAAA,mB;AAuDN,eAAeA,mBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport NewTransaction from './NewTransaction';\nimport Transactions from './Transactions';\nimport createRequest from '../../request';\nimport TransactionItem from './TransactionItem';\n\nconst TransactionsDisplay = () => {\n    const [transactions, setTransactions] = useState([]);\n\n\n    // const input = '/transactions.json';\n    // useEffect(()=>{\n    //     const fetchTransactions = async() => { \n    //         createRequest(input).then((data)=> {\n    //             console.log(data);\n    //             setTransactions(data);       \n    //         })\n    //     }   \n    //     const timer = setTimeout(()=>{\n    //         fetchTransactions();\n    //     }, 1000);\n    //     return () => clearTimeout(timer);    \n    // }, [input]);\n\n    useEffect(() => {\n        const fetchTransactions = () => { \n            createRequest('/transactions.json')\n            .then(result => {\n                setTransactions(result); \n            })\n        }   \n        // const timer = setTimeout(()=>{\n            fetchTransactions();\n        // }, 1000);\n        // return () => clearTimeout(timer);    \n    }, []);\n\n    const addTransactionHandler = (transaction) => {\n        setTransactions((prevTransactions) => {\n          return [transaction, ...prevTransactions];\n        });\n    };\n\n    const deleteTransactionHandler = (deletedId) => {\n        setTransactions((prevTransactions) => {\n            const delelteTransaction = prevTransactions.filter(function (transaction) {\n                return transaction.id != deletedId\n            });\n            return delelteTransaction\n        });\n    };\n\n    return (\n        <div >\n            <NewTransaction onAddTransaction={addTransactionHandler}/>\n            <Transactions items={transactions} onDeleteTransaction={deleteTransactionHandler}/>\n        </div>\n    )\n\n}\n\nexport default TransactionsDisplay;"]},"metadata":{},"sourceType":"module"}